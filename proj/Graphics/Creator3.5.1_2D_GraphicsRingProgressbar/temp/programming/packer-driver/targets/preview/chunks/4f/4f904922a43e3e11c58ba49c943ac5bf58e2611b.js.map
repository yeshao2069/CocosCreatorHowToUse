{"version":3,"sources":["file:///Users/mu/Desktop/Creator3.5.1_2D_RingProgressbar/assets/scripts/ArcProgressBar.ts"],"names":["_decorator","Component","Graphics","Color","ccclass","property","requireComponent","executeInEditMode","help","menu","ArcProgressBar","cc","tooltip","CC_DEV","range","step","type","LineCap","curStartAngle","curStartRadians","curEndRadians","curTween","curTweenRes","radius","_radius","value","updateProperties","clockwise","_clockwise","startAngle","_startAngle","_range","lineWidth","_lineWidth","progress","_progress","updateProgress","lineCap","_lineCap","backgroundColor","_backgroundColor","progressColor","_progressColor","onLoad","init","resetInEditor","graphics","getComponent","show","Promise","res","node","opacity","active","tween","to","call","start","hide","set","angleToRadians","endAngle","clear","strokeColor","arc","stroke","offset","angle","radians","duration","stop","Math","PI","ROUND"],"mappings":"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","sourcesContent":["import { _decorator, Component, Graphics, Color, Tween } from 'cc';\nconst { ccclass, property, requireComponent, executeInEditMode, help, menu } = _decorator;\n\n// /**\n// * 弧形进度条\n// * @author 陈皮皮 (ifaswind)\n// * @version 20210908\n// * @see ArcProgressBar.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/charts/ArcProgressBar.ts\n// */\n\n@ccclass('ArcProgressBar')\n@requireComponent(cc.Graphics)@executeInEditMode\nexport default class ArcProgressBar extends Component {\n    @property(Graphics)\n    protected graphics: Graphics | null = null;\n    @property()\n    protected _radius: number = 100;\n    @property({ tooltip: CC_DEV && '半径' })\n    public get radius() {\n        return this._radius;\n    }\n    public set radius(value: number) {\n        this._radius = value;\n        this.updateProperties();\n    }\n    @property()\n    protected _clockwise: boolean = true;\n    @property({ tooltip: CC_DEV && '顺时针方向' })\n    public get clockwise() {\n        return this._clockwise;\n    }\n    public set clockwise(value: boolean) {\n        this._clockwise = value;\n        this.updateProperties();\n    }\n    @property()\n    protected _startAngle: number = 90;\n    @property({ tooltip: CC_DEV && '开始角度 (基于 y 轴)' })\n    public get startAngle() {\n        return this._startAngle;\n    }\n    public set startAngle(value: number) {\n        this._startAngle = value;\n        this.updateProperties();\n    }\n    @property()\n    protected _range: number = 180;\n    @property({ tooltip: CC_DEV && '范围 (角度)' })\n    public get range() {\n        return this._range;\n    }\n    public set range(value: number) {\n        this._range = value;\n        this.updateProperties();\n    }\n    @property()\n    protected _lineWidth: number = 20;\n    @property({ tooltip: CC_DEV && '线宽' })\n    public get lineWidth() {\n        return this._lineWidth;\n    }\n    public set lineWidth(value: number) {\n        this._lineWidth = value;\n        this.updateProperties();\n    }\n    @property()\n    protected _progress: number = 0.4;\n    @property({ range: [0, 1], step: 0.01, tooltip: CC_DEV && '进度 (0 ~ 1)' })\n    public get progress() {\n        return this._progress;\n    }\n    public set progress(value: number) {\n        this.updateProgress(value);\n    }\n    @property()\n    protected _lineCap: Graphics.LineCap = Graphics.LineCap.ROUND;\n    @property({ type: Graphics.LineCap, tooltip: CC_DEV && '线帽' })\n    public get lineCap() {\n        return this._lineCap;\n    }\n    public set lineCap(value: number) {\n        this._lineCap = value;\n        this.updateProperties();\n    }\n    @property()\n    protected _backgroundColor: Color = new Color(255, 255, 255, 255);\n    @property({ type: Color, tooltip: CC_DEV && '背景颜色' })\n    public get backgroundColor() {\n        return this._backgroundColor;\n    }\n    public set backgroundColor(value: Color) {\n        this._backgroundColor = value;\n        this.updateProperties();\n    }\n    @property()\n    protected _progressColor: Color = new Color(50, 101, 246, 255);\n    @property({ type: Color, tooltip: CC_DEV && '进度颜色' })\n    public get progressColor() {\n        return this._progressColor;\n    }\n    public set progressColor(value: Color) {\n        this._progressColor = value;\n        this.updateProperties();\n    }\n// /**\n// * 预计算的开始角度\n// */\n    protected curStartAngle: number = 0;\n// /**\n// * 预计算的开始弧度\n// */\n    protected curStartRadians: number = 0;\n// /**\n// * 预计算的结束弧度\n// */\n    protected curEndRadians: number = 0;\n// /**\n// * 当前缓动对象\n// */\n    protected curTween: Tween | null = null;\n// /**\n// * 当前缓动的 Promise resolve\n// */\n    protected curTweenRes: Function = null;\n// /**\n// * 生命周期：加载\n// */\n    protected onLoad() {\n        this.init();\n    }\n// /**\n// * 编辑器回调：重置\n// */\n    protected resetInEditor() {\n        this.init();\n    }\n// /**\n// * 初始化\n// */\n    protected init() {\n        if (!this.graphics) {\n        this.graphics = this.getComponent(cc.Graphics);\n        }\n        this.updateProperties();\n    }\n// /**\n// * 展示\n// */\n    public show() {\n        return new Promise<void>(res => {\n        const node = this.graphics.node;\n        node.opacity = 0;\n        node.active = true;\n        cc.tween(node)\n        .to(0.1, { opacity: 255 })\n        .call(res)\n        .start();\n        });\n    }\n// /**\n// * 隐藏\n// */\n    public hide() {\n        return new Promise<void>(res => {\n        const node = this.graphics.node;\n        cc.tween(node)\n        .to(0.1, { opacity: 0 })\n        .set({ active: false })\n        .call(res)\n        .start();\n        });\n    }\n// /**\n// * 更新属性\n// */\n    protected updateProperties() {\n// // 设置样式\n        const graphics = this.graphics;\n        graphics.lineWidth = this._lineWidth;\n        graphics.lineCap = this._lineCap;\n// // 预计算角度\n        this.curStartAngle = this._startAngle + 90;\n        this.curStartRadians = this.angleToRadians(this.curStartAngle);\n        const endAngle = this.curStartAngle + (this._clockwise ? -this._range : this._range);\n        this.curEndRadians = this.angleToRadians(endAngle);\n// // 重新绘制进度条\n        this.updateProgress(this._progress);\n    }\n// /**\n// * 更新进度\n// * @param value 进度值（0~1）\n// */\n    public updateProgress(value: number) {\n// // 处理并保存值\n        if (value < 0) {\n        value = 0;\n        } else if (value > 1) {\n        value = 1;\n        }\n        this._progress = value;\n\n// // 清空画布\n        const graphics = this.graphics;\n        graphics.clear();\n\n// // 画出背景\n        graphics.strokeColor = this._backgroundColor;\n        graphics.arc(0, 0, this._radius, this.curStartRadians, this.curEndRadians, !this._clockwise);\n        graphics.stroke();\n\n// // 计算并画出进度\n        const offset = this._clockwise ? -this._range : this._range,\n        angle = this.curStartAngle + (offset * value),\n        radians = this.angleToRadians(angle);\n        graphics.strokeColor = this._progressColor;\n        graphics.arc(0, 0, this._radius, this.curStartRadians, radians, !this._clockwise);\n        graphics.stroke();\n    }\n// /**\n// * 缓动进度\n// * @param duration 时长\n// * @param progress 目标进度\n// */\n    public to(duration: number, progress: number) {\n        return new Promise<void>(res => {\n        this.stop();\n        this.curTweenRes = res;\n        this.curTween = cc.tween<ArcProgressBar>(this)\n        .to(duration, { progress })\n        .call(() => {\n        this.curTween = null;\n        this.curTweenRes = null;\n        })\n        .call(res)\n        .start();\n        });\n    }\n// /**\n// * 停止当前缓动\n// */\n    public stop() {\n        if (this.curTween) {\n        this.curTween.stop();\n        this.curTween = null;\n        }\n        if (this.curTweenRes) {\n        this.curTweenRes();\n        this.curTweenRes = null;\n        }\n    }\n// /**\n// * 角度转弧度\n// * @param angle 角度\n// */\n    public angleToRadians(angle: number) {\n        return (Math.PI / 180) * angle;\n    }\n}\n\n\n/**\n * 注意：已把原脚本注释，由于脚本变动过大，转换的时候可能有遗落，需要自行手动转换\n */\n// const { ccclass, property, requireComponent, executeInEditMode, help, menu } = cc._decorator;\n// \n// /**\n//  * 弧形进度条\n//  * @author 陈皮皮 (ifaswind)\n//  * @version 20210908\n//  * @see ArcProgressBar.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/charts/ArcProgressBar.ts\n//  */\n// @ccclass\n// @requireComponent(cc.Graphics)\n// @executeInEditMode\n// export default class ArcProgressBar extends cc.Component {\n// \n//     @property(cc.Graphics)\n//     protected graphics: cc.Graphics = null;\n// \n//     @property()\n//     protected _radius: number = 100;\n//     @property({ tooltip: CC_DEV && '半径' })\n//     public get radius() {\n//         return this._radius;\n//     }\n//     public set radius(value: number) {\n//         this._radius = value;\n//         this.updateProperties();\n//     }\n// \n//     @property()\n//     protected _clockwise: boolean = true;\n//     @property({ tooltip: CC_DEV && '顺时针方向' })\n//     public get clockwise() {\n//         return this._clockwise;\n//     }\n//     public set clockwise(value: boolean) {\n//         this._clockwise = value;\n//         this.updateProperties();\n//     }\n// \n//     @property()\n//     protected _startAngle: number = 90;\n//     @property({ tooltip: CC_DEV && '开始角度 (基于 y 轴)' })\n//     public get startAngle() {\n//         return this._startAngle;\n//     }\n//     public set startAngle(value: number) {\n//         this._startAngle = value;\n//         this.updateProperties();\n//     }\n// \n//     @property()\n//     protected _range: number = 180;\n//     @property({ tooltip: CC_DEV && '范围 (角度)' })\n//     public get range() {\n//         return this._range;\n//     }\n//     public set range(value: number) {\n//         this._range = value;\n//         this.updateProperties();\n//     }\n// \n//     @property()\n//     protected _lineWidth: number = 20;\n//     @property({ tooltip: CC_DEV && '线宽' })\n//     public get lineWidth() {\n//         return this._lineWidth;\n//     }\n//     public set lineWidth(value: number) {\n//         this._lineWidth = value;\n//         this.updateProperties();\n//     }\n// \n//     @property()\n//     protected _progress: number = 0.4;\n//     @property({ range: [0, 1], step: 0.01, tooltip: CC_DEV && '进度 (0 ~ 1)' })\n//     public get progress() {\n//         return this._progress;\n//     }\n//     public set progress(value: number) {\n//         this.updateProgress(value);\n//     }\n// \n//     @property()\n//     protected _lineCap: cc.Graphics.LineCap = cc.Graphics.LineCap.ROUND;\n//     @property({ type: cc.Graphics.LineCap, tooltip: CC_DEV && '线帽' })\n//     public get lineCap() {\n//         return this._lineCap;\n//     }\n//     public set lineCap(value: number) {\n//         this._lineCap = value;\n//         this.updateProperties();\n//     }\n// \n//     @property()\n//     protected _backgroundColor: cc.Color = new cc.Color(255, 255, 255, 255);\n//     @property({ type: cc.Color, tooltip: CC_DEV && '背景颜色' })\n//     public get backgroundColor() {\n//         return this._backgroundColor;\n//     }\n//     public set backgroundColor(value: cc.Color) {\n//         this._backgroundColor = value;\n//         this.updateProperties();\n//     }\n// \n//     @property()\n//     protected _progressColor: cc.Color = new cc.Color(50, 101, 246, 255);\n//     @property({ type: cc.Color, tooltip: CC_DEV && '进度颜色' })\n//     public get progressColor() {\n//         return this._progressColor;\n//     }\n//     public set progressColor(value: cc.Color) {\n//         this._progressColor = value;\n//         this.updateProperties();\n//     }\n// \n//     /**\n//      * 预计算的开始角度\n//      */\n//     protected curStartAngle: number = 0;\n// \n//     /**\n//      * 预计算的开始弧度\n//      */\n//     protected curStartRadians: number = 0;\n// \n//     /**\n//      * 预计算的结束弧度\n//      */\n//     protected curEndRadians: number = 0;\n// \n//     /**\n//      * 当前缓动对象\n//      */\n//     protected curTween: cc.Tween = null;\n// \n//     /**\n//      * 当前缓动的 Promise resolve\n//      */\n//     protected curTweenRes: Function = null;\n// \n//     /**\n//      * 生命周期：加载\n//      */\n//     protected onLoad() {\n//         this.init();\n//     }\n// \n//     /**\n//      * 编辑器回调：重置\n//      */\n//     protected resetInEditor() {\n//         this.init();\n//     }\n// \n//     /**\n//      * 初始化\n//      */\n//     protected init() {\n//         if (!this.graphics) {\n//             this.graphics = this.getComponent(cc.Graphics);\n//         }\n//         this.updateProperties();\n//     }\n// \n//     /**\n//      * 展示\n//      */\n//     public show() {\n//         return new Promise<void>(res => {\n//             const node = this.graphics.node;\n//             node.opacity = 0;\n//             node.active = true;\n//             cc.tween(node)\n//                 .to(0.1, { opacity: 255 })\n//                 .call(res)\n//                 .start();\n//         });\n//     }\n// \n//     /**\n//      * 隐藏\n//      */\n//     public hide() {\n//         return new Promise<void>(res => {\n//             const node = this.graphics.node;\n//             cc.tween(node)\n//                 .to(0.1, { opacity: 0 })\n//                 .set({ active: false })\n//                 .call(res)\n//                 .start();\n//         });\n//     }\n// \n//     /**\n//      * 更新属性\n//      */\n//     protected updateProperties() {\n//         // 设置样式\n//         const graphics = this.graphics;\n//         graphics.lineWidth = this._lineWidth;\n//         graphics.lineCap = this._lineCap;\n//         // 预计算角度\n//         this.curStartAngle = this._startAngle + 90;\n//         this.curStartRadians = this.angleToRadians(this.curStartAngle);\n//         const endAngle = this.curStartAngle + (this._clockwise ? -this._range : this._range);\n//         this.curEndRadians = this.angleToRadians(endAngle);\n//         // 重新绘制进度条\n//         this.updateProgress(this._progress);\n//     }\n// \n//     /**\n//      * 更新进度\n//      * @param value 进度值（0~1）\n//      */\n//     public updateProgress(value: number) {\n//         // 处理并保存值\n//         if (value < 0) {\n//             value = 0;\n//         } else if (value > 1) {\n//             value = 1;\n//         }\n//         this._progress = value;\n// \n//         // 清空画布\n//         const graphics = this.graphics;\n//         graphics.clear();\n// \n//         // 画出背景\n//         graphics.strokeColor = this._backgroundColor;\n//         graphics.arc(0, 0, this._radius, this.curStartRadians, this.curEndRadians, !this._clockwise);\n//         graphics.stroke();\n// \n//         // 计算并画出进度\n//         const offset = this._clockwise ? -this._range : this._range,\n//             angle = this.curStartAngle + (offset * value),\n//             radians = this.angleToRadians(angle);\n//         graphics.strokeColor = this._progressColor;\n//         graphics.arc(0, 0, this._radius, this.curStartRadians, radians, !this._clockwise);\n//         graphics.stroke();\n//     }\n// \n//     /**\n//      * 缓动进度\n//      * @param duration 时长\n//      * @param progress 目标进度\n//      */\n//     public to(duration: number, progress: number) {\n//         return new Promise<void>(res => {\n//             this.stop();\n//             this.curTweenRes = res;\n//             this.curTween = cc.tween<ArcProgressBar>(this)\n//                 .to(duration, { progress })\n//                 .call(() => {\n//                     this.curTween = null;\n//                     this.curTweenRes = null;\n//                 })\n//                 .call(res)\n//                 .start();\n//         });\n//     }\n// \n//     /**\n//      * 停止当前缓动\n//      */\n//     public stop() {\n//         if (this.curTween) {\n//             this.curTween.stop();\n//             this.curTween = null;\n//         }\n//         if (this.curTweenRes) {\n//             this.curTweenRes();\n//             this.curTweenRes = null;\n//         }\n//     }\n// \n//     /**\n//      * 角度转弧度\n//      * @param angle 角度\n//      */\n//     public angleToRadians(angle: number) {\n//         return (Math.PI / 180) * angle;\n//     }\n// \n// }\n"]}