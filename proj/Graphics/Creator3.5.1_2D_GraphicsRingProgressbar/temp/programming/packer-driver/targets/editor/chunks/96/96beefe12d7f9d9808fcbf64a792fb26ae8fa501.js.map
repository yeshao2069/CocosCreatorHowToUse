{"version":3,"sources":["file:///Users/mu/Desktop/Creator3.5.1_2D_RingProgressbar/assets/scripts/ArcProgressBar.ts"],"names":["_decorator","Component","Graphics","Color","tween","UIOpacity","DEV","ccclass","property","requireComponent","executeInEditMode","help","menu","ArcProgressBar","tooltip","range","step","type","LineCap","curStartAngle","curStartRadians","curEndRadians","curTween","curTweenRes","radius","_radius","value","updateProperties","clockwise","_clockwise","startAngle","_startAngle","_range","lineWidth","_lineWidth","progress","_progress","updateProgress","lineCap","_lineCap","backgroundColor","_backgroundColor","progressColor","_progressColor","onLoad","init","resetInEditor","graphics","getComponent","show","Promise","res","node","opacity","active","to","call","start","hide","angleToRadians","endAngle","clear","strokeColor","arc","stroke","offset","angle","radians","duration","stop","Math","PI","ROUND"],"mappings":"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","sourcesContent":["import { _decorator, Component, Graphics, Color, Tween, tween, UIOpacity } from 'cc';\nimport { DEV } from 'cc/env';\nconst { ccclass, property, requireComponent, executeInEditMode, help, menu } = _decorator;\n\n// /**\n// * 弧形进度条\n// * @author 陈皮皮 (ifaswind)\n// * @version 20210908\n// * @see ArcProgressBar.ts https://gitee.com/ifaswind/eazax-ccc/blob/master/components/charts/ArcProgressBar.ts\n// */\n\n@ccclass('ArcProgressBar')\n@requireComponent(Graphics)\n@executeInEditMode\n// @ts-ignore\nexport default class ArcProgressBar extends Component {\n    @property(Graphics)\n    protected graphics: Graphics | null = null;\n    @property()\n    protected _radius: number = 100;\n    @property({ tooltip: DEV && '半径' })\n    public get radius() {\n        return this._radius;\n    }\n    public set radius(value: number) {\n        this._radius = value;\n        this.updateProperties();\n    }\n    @property()\n    protected _clockwise: boolean = true;\n    @property({ tooltip: DEV && '顺时针方向' })\n    public get clockwise() {\n        return this._clockwise;\n    }\n    public set clockwise(value: boolean) {\n        this._clockwise = value;\n        this.updateProperties();\n    }\n    @property()\n    protected _startAngle: number = 90;\n    @property({ tooltip: DEV && '开始角度 (基于 y 轴)' })\n    public get startAngle() {\n        return this._startAngle;\n    }\n    public set startAngle(value: number) {\n        this._startAngle = value;\n        this.updateProperties();\n    }\n    @property()\n    protected _range: number = 180;\n    @property({ tooltip: DEV && '范围 (角度)' })\n    public get range() {\n        return this._range;\n    }\n    public set range(value: number) {\n        this._range = value;\n        this.updateProperties();\n    }\n    @property()\n    protected _lineWidth: number = 20;\n    @property({ tooltip: DEV && '线宽' })\n    public get lineWidth() {\n        return this._lineWidth;\n    }\n    public set lineWidth(value: number) {\n        this._lineWidth = value;\n        this.updateProperties();\n    }\n    @property()\n    protected _progress: number = 0.4;\n    @property({ range: [0, 1], step: 0.01, tooltip: DEV && '进度 (0 ~ 1)' })\n    public get progress() {\n        return this._progress;\n    }\n    public set progress(value: number) {\n        this.updateProgress(value);\n    }\n    @property()\n    // @ts-ignore\n    protected _lineCap: Graphics.LineCap = Graphics.LineCap.ROUND;\n    @property({ type: Graphics.LineCap, tooltip: DEV && '线帽' })\n    public get lineCap() {\n        return this._lineCap;\n    }\n    public set lineCap(value: number) {\n        this._lineCap = value;\n        this.updateProperties();\n    }\n    @property()\n    protected _backgroundColor: Color = new Color(255, 255, 255, 255);\n    @property({ type: Color, tooltip: DEV && '背景颜色' })\n    public get backgroundColor() {\n        return this._backgroundColor;\n    }\n    public set backgroundColor(value: Color) {\n        this._backgroundColor = value;\n        this.updateProperties();\n    }\n    @property()\n    protected _progressColor: Color = new Color(50, 101, 246, 255);\n    @property({ type: Color, tooltip: DEV && '进度颜色' })\n    public get progressColor() {\n        return this._progressColor;\n    }\n    public set progressColor(value: Color) {\n        this._progressColor = value;\n        this.updateProperties();\n    }\n    /**\n    * 预计算的开始角度\n    */\n    protected curStartAngle: number = 0;\n    /**\n    * 预计算的开始弧度\n    */\n    protected curStartRadians: number = 0;\n    /**\n    * 预计算的结束弧度\n    */\n    protected curEndRadians: number = 0;\n    /**\n    * 当前缓动对象\n    */\n    protected curTween: Tween<any> | null = null;\n    /**\n    * 当前缓动的 Promise resolve\n    */\n    protected curTweenRes: Function = null;\n    /**\n    * 生命周期：加载\n    */\n    protected onLoad() {\n        this.init();\n    }\n    /**\n    * 编辑器回调：重置\n    */\n    protected resetInEditor() {\n        this.init();\n    }\n    /**\n    * 初始化\n    */\n    protected init() {\n        if (!this.graphics) {\n        this.graphics = this.getComponent(Graphics);\n        }\n        this.updateProperties();\n    }\n    /**\n    * 展示\n    */\n    public show() {\n        return new Promise<void>(res => {\n            const node = this.graphics.node;\n            node.getComponent(UIOpacity).opacity = 0;\n            node.active = true;\n            tween(node.getComponent(UIOpacity))\n                .to(0.1, { opacity: 255 })\n                .call(res)\n                .start();\n            });\n    }\n    /**\n    * 隐藏\n    */\n    public hide() {\n        return new Promise<void>(res => {\n            const node = this.graphics.node;\n            tween(node.getComponent(UIOpacity))\n                .to(0.1, { opacity: 0 })\n                // .set({ active: false })\n                .call(res)\n                .call( () => { node.active = false; } )\n                .start();\n            });\n    }\n    /**\n    * 更新属性\n    */\n    protected updateProperties() {\n        // 设置样式\n        const graphics = this.graphics;\n        graphics.lineWidth = this._lineWidth;\n        graphics.lineCap = this._lineCap;\n        // 预计算角度\n        this.curStartAngle = this._startAngle + 90;\n        this.curStartRadians = this.angleToRadians(this.curStartAngle);\n        const endAngle = this.curStartAngle + (this._clockwise ? -this._range : this._range);\n        this.curEndRadians = this.angleToRadians(endAngle);\n        // 重新绘制进度条\n        this.updateProgress(this._progress);\n    }\n    /**\n    * 更新进度\n    * @param value 进度值（0~1）\n    */\n    public updateProgress(value: number) {\n        // 处理并保存值\n        if (value < 0) {\n        value = 0;\n        } else if (value > 1) {\n        value = 1;\n        }\n        this._progress = value;\n\n        // 清空画布\n        const graphics = this.graphics;\n        graphics.clear();\n\n        // 画出背景\n        graphics.strokeColor = this._backgroundColor;\n        graphics.arc(0, 0, this._radius, this.curStartRadians, this.curEndRadians, !this._clockwise);\n        graphics.stroke();\n\n        // 计算并画出进度\n        const offset = this._clockwise ? -this._range : this._range,\n        angle = this.curStartAngle + (offset * value),\n        radians = this.angleToRadians(angle);\n        graphics.strokeColor = this._progressColor;\n        graphics.arc(0, 0, this._radius, this.curStartRadians, radians, !this._clockwise);\n        graphics.stroke();\n    }\n    /**\n    * 缓动进度\n    * @param duration 时长\n    * @param progress 目标进度\n    */\n    public to(duration: number, progress: number) {\n        return new Promise<void>(res => {\n        this.stop();\n        this.curTweenRes = res;\n        this.curTween = tween<ArcProgressBar>(this)\n            .to(duration, { progress })\n            .call(() => {\n            this.curTween = null;\n            this.curTweenRes = null;\n            })\n            .call(res)\n            .start();\n        });\n    }\n    /**\n    * 停止当前缓动\n    */\n    public stop() {\n        if (this.curTween) {\n        this.curTween.stop();\n        this.curTween = null;\n        }\n        if (this.curTweenRes) {\n        this.curTweenRes();\n        this.curTweenRes = null;\n        }\n    }\n    /**\n    * 角度转弧度\n    * @param angle 角度\n    */\n    public angleToRadians(angle: number) {\n        return (Math.PI / 180) * angle;\n    }\n}\n"]}