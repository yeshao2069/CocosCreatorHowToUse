{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Performance/Creator3.5.0_3D_GpuInstancing/assets/script/fight/playerManager.ts"],"names":["_decorator","Component","instantiate","CameraComponent","Tween","Vec3","CCString","profiler","player","ResManager","StorageManager","gameLogic","constants","ccclass","property","CAMERA_MOVE_PER_PERSON","ANTI_KEY","playerManager","arrModel","artTriangle","artVertex","_people","onPeopleNumChanged","isStart","currentLevel","tweenCamera","posCameraOrigin","isEnableInstancing","_prevPeopleRate","isEnableShadow","isEnableAntiAliasing","people","value","enableInstancing","node","children","forEach","nodePlayer","playerScript","getComponent","changeInstancingBatch","enableShadow","changeShadow","enableAntiAliasing","instance","setGlobalData","cc","sys","isBrowser","window","location","reload","platform","WECHAT_GAME","console","log","wx","exitMiniProgram","complete","isNative","__restartVM","onLoad","resPath","start","getGlobalData","arrName","name","getModel","err","prefab","push","length","addPlayerGroup","mainCamera","position","clone","updatePlayerNumber","resetPlayer","destroyAllChildren","reducePlayer","num","addNum","i","pfModel","data","model","parent","show","triangle","vertex","Math","floor","moveUpCamera","rate","obj","round","_stats","fps","counter","toString","draws","instances","tricount","textureMemory","toFixed","logic","scheduleOnce","customEventStatistics","EVENT_TYPE","PERFORMANCE_PARAMETER","deleteNum","destroy","pos","forward","negative","multiplyScalar","add","stop","to","direction","addDancer","setScale","setPosition"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, CameraComponent, Tween, Vec3, easing, game, CCString, profiler, SkinningModelComponent, SkeletalAnimationComponent } from 'cc';\nimport { player } from './player';\nimport { SubPackageManager } from '../framework/util/subPackageManager';\nimport ResManager from '../framework/util/resManager';\nimport { StorageManager } from '../framework/config/storageManager';\nimport { gameLogic } from '../framework/util/gameLogic';\nimport { constants } from '../framework/util/constants';\nconst { ccclass, property } = _decorator;\n\nconst CAMERA_MOVE_PER_PERSON = 100; //每多少人摄像机抬高一次\n\nconst ANTI_KEY = 'anti-aliasing';\n\n@ccclass('playerManager')\nexport class playerManager extends Component {\n    /* class member could be defined like this */\n    // dummy = '';\n\n    /* use `property` decorator if your want the member to be serializable */\n    // @property\n    // serializableDummy = 0;\n    arrModel: Prefab[] = [];\n\n    @property([CCString])\n    arrName: string[] = [];\n\n    @property(CameraComponent)\n    mainCamera: CameraComponent = null;\n\n    //美术的面数及顶点数\n    artTriangle: number = 0;\n    artVertex: number = 0;\n    private _people: number = 0;\n    get people() {\n        return this._people;\n    }\n    set people(value: number) {\n        this._people = value;\n        if (this.onPeopleNumChanged) {\n            this.onPeopleNumChanged(this._people);\n        }\n    }\n\n    public onPeopleNumChanged: Function = null;\n    isStart = false;\n\n    currentLevel: number = 0;\n    tweenCamera: Tween;\n    posCameraOrigin: Vec3;\n\n    isEnableInstancing = false;\n\n    private _prevPeopleRate: number = 0; //人数除以30等于多少倍\n\n    set enableInstancing (value: boolean) {\n        this.isEnableInstancing = value;\n\n        this.node.children.forEach((nodePlayer)=>{\n            let playerScript = nodePlayer.getComponent(player);\n            if (playerScript) {\n                playerScript.changeInstancingBatch(value);\n            }\n        })\n    }\n\n    get enableInstancing () {\n        return this.isEnableInstancing;\n    }\n\n    isEnableShadow = true;\n\n    set enableShadow (value: boolean) {\n        this.isEnableShadow = value;\n\n        this.node.children.forEach((nodePlayer)=>{\n            let playerScript = nodePlayer.getComponent(player);\n            if (playerScript) {\n                playerScript.changeShadow(value);\n            }\n        })\n    }\n\n    get enableShadow () {\n        return this.isEnableShadow;\n    }\n\n    isEnableAntiAliasing = false;\n\n    set enableAntiAliasing (value: boolean) {\n        this.isEnableAntiAliasing = value;\n\n        StorageManager.instance.setGlobalData(ANTI_KEY, value);\n\n        if (cc.sys.isBrowser) {\n            window.location.reload();\n        } else if (cc.sys.platform === cc.sys.WECHAT_GAME) {\n            console.log('reload!');\n            window.wx.exitMiniProgram({\n                complete: ()=>{\n                    \n                }\n            });\n        } else if (cc.sys.isNative) {\n            window.__restartVM();\n        }\n    }\n\n    get enableAntiAliasing () {\n        return this.isEnableAntiAliasing;\n    }\n\n    onLoad () {\n        ResManager.resPath = 'model-animation/';\n        StorageManager.instance.start();\n\n        this.isEnableAntiAliasing = StorageManager.instance.getGlobalData(ANTI_KEY) || false;\n    }\n\n    start () {\n        // Your initialization goes here.\n        this.arrName.forEach((name)=>{\n            ResManager.getModel(name, (err, prefab)=>{\n                if (!err) {\n                    this.arrModel.push(prefab);\n\n                    if (this.arrModel.length === this.arrName.length) {\n                        this.addPlayerGroup();\n\n                        this.isStart = true;\n                    }\n                }\n            });\n        });\n\n        this.posCameraOrigin = this.mainCamera.node.position.clone();\n    }\n\n    addPlayerGroup () {\n        this.updatePlayerNumber(this.people + this.arrModel.length);\n    }\n\n    resetPlayer () {\n        this.node.destroyAllChildren();\n\n        this.artTriangle = 0;\n        this.artVertex = 0;\n        this.people = 0;\n        this.currentLevel = 0;\n\n        this.mainCamera.node.position = this.posCameraOrigin;\n\n        this._prevPeopleRate = 0;\n    }\n\n    reducePlayer () {\n        this.updatePlayerNumber(this.people - this.arrName.length);\n    }\n\n    updatePlayerNumber(num: number) {\n        if (this.people === num) {\n            return;\n        }\n\n        if (num < 0) {\n            num = 0;\n        }\n\n        // add\n        if (num > this.people) {\n            const addNum = num - this.people;\n            for (let i = 0; i < addNum; i++) {\n                const pfModel = this.arrModel[i%this.arrModel.length];\n\n                console.log(pfModel.data.name);\n\n                let model = instantiate(pfModel) as Node;\n                model.parent = this.node;\n    \n                let playerScript = model.getComponent(player);\n                playerScript.show(this);\n    \n                this.artTriangle += playerScript.triangle;\n                this.artVertex += playerScript.vertex;\n            }\n\n            this.people = num;\n\n            if (Math.floor(this.people / CAMERA_MOVE_PER_PERSON) > this.currentLevel) {\n                //触发镜头拉高\n                this.moveUpCamera();\n            }\n    \n            let rate = Math.floor(this.people / 30);\n    \n            if (rate > this._prevPeopleRate) {\n                let obj = {\n                    'Fps': Math.round(profiler._stats.fps.counter.value).toString(),     \n                    'Drawcall' : profiler._stats.draws.counter.value.toString(),\n                    'Instancing' : profiler._stats.instances.counter.value.toString(),\n                    'Triangle' : profiler._stats.tricount.counter.value.toString(),\n                    'GFXMem' : profiler._stats.textureMemory.counter.value.toFixed(1).toString(),\n                    'GameLogic' : profiler._stats.logic.counter.value.toFixed(2).toString(),\n                    'ArtTriangle' : this.artTriangle.toString(),\n                    'Vertex' : this.artVertex.toString(),\n                    'People' : this.people.toString(),            \n                }\n                \n                this.scheduleOnce(()=>{\n                    gameLogic.customEventStatistics(constants.EVENT_TYPE.PERFORMANCE_PARAMETER, obj);\n                }, 0.5);\n    \n                this._prevPeopleRate = rate;\n            }\n        } else {    // reduce\n            const deleteNum = this.people - num;\n            for(let i = 0; i < deleteNum; i++) {\n                const nodePlayer = this.node.children[this.node.children.length - 1 - i];\n     \n                if (!nodePlayer) {\n                    return;\n                }\n    \n                let playerScript = nodePlayer.getComponent(player);\n                this.artTriangle -= playerScript.triangle;\n                this.artVertex -= playerScript.vertex;\n    \n                nodePlayer.destroy();\n            }\n\n            this.people = num;\n            \n            if (this.currentLevel > Math.floor(this.people / CAMERA_MOVE_PER_PERSON)) {\n                this.currentLevel = Math.floor(this.people / CAMERA_MOVE_PER_PERSON);\n\n                let pos = this.mainCamera.node.forward.clone().negative().multiplyScalar(8 * this.currentLevel);\n\n                pos.add(this.posCameraOrigin);\n\n                if (this.tweenCamera) {\n                    this.tweenCamera.stop();\n                    this.tweenCamera = null;\n                }\n        \n                this.tweenCamera = new Tween(this.mainCamera.node).to(0.2, {position: pos}).start();\n            }\n        }\n    }\n\n    moveUpCamera () {\n        this.currentLevel++;\n\n        let direction = this.mainCamera.node.forward.clone().negative().multiplyScalar(8);\n        direction.add(this.mainCamera.node.position);\n        \n\n        if (this.tweenCamera) {\n            this.tweenCamera.stop();\n            this.tweenCamera = null;\n        }\n\n        this.tweenCamera = new Tween(this.mainCamera.node).to(0.2, {position: direction}).start();\n    }\n\n    addDancer () {\n        ResManager.getModel('dance1', (err, prefab)=>{\n            if (!err) {\n                let model = instantiate(prefab) as Node;\n                model.parent = this.node;\n                model.setScale(new Vec3(2.5, 2.5, 2.5));\n                model.setPosition(new Vec3(2.4,0,2));\n            }\n        });\n    }\n\n    // enableInstancing (isEnable: boolean) {\n    //     // this.arrName.forEach((name)=>{\n    //     //     let nodePlayer = this.node.getChildByName(name);\n\n    //     //     nodePlayer.getComponent(player).changeInstancingBatch(isEnable);\n    //     // });\n    //     this.isEnableInstancing = false;\n\n    //     this.node.children.forEach((nodePlayer)=>{\n    //         let playerScript = nodePlayer.getComponent(player);\n    //         if (playerScript) {\n    //             playerScript.changeInstancingBatch(isEnable);\n    //         }\n    //     })\n    // }\n\n    // update (deltaTime: number) {\n    //     // Your update function goes here.\n    // }\n}\n"]}