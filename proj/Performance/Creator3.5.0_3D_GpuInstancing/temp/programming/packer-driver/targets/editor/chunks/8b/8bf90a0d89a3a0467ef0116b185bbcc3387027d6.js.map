{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Performance/Creator3.5.0_3D_GpuInstancing/assets/script/fight/player.ts"],"names":["_decorator","Component","Vec3","Tween","SkinningModelComponent","SkeletalAnimationComponent","instacingMaterial","ccclass","property","player","manager","tweenMove","start","show","x","currentLevel","Math","random","z","pos","node","position","move","enableInstancing","changeInstancingBatch","changeShadow","enableShadow","onDestroy","stop","nextPoint","offset","clone","subtract","forward","normalize","negative","costTime","length","to","call","isEnable","arrInstancing","getComponentsInChildren","forEach","instancing","getComponent","play","arrModel","model","shadowCastingMode","ShadowCastingMode","ON","OFF"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, Tween, ModelComponent, SkinningModelComponent, SkeletalAnimationComponent } from 'cc';\nimport { playerManager } from './playerManager';\nimport { instacingMaterial } from './instacingMaterial';\nconst { ccclass, property } = _decorator;\n\n@ccclass('player')\nexport class player extends Component {\n    /* class member could be defined like this */\n    // dummy = '';\n\n    /* use `property` decorator if your want the member to be serializable */\n    // @property\n    // serializableDummy = 0;\n\n    @property\n    triangle: number = 0;\n\n    @property\n    vertex: number = 0;\n\n    manager: playerManager;\n    tweenMove: Tween;\n\n    start () {\n        // Your initialization goes here.\n    }\n\n    show (manager: playerManager) {\n        //x: -5~5\n        //z: -20~6\n        this.manager = manager;\n\n        let x = (-8 - 3 * this.manager.currentLevel) + Math.random() * (16 + 6 * this.manager.currentLevel);\n        let z = -20 + Math.random() * (26 + 5*this.manager.currentLevel);\n\n        let pos = new Vec3(x, 0, z);\n\n        this.node.position = pos;\n\n        //TODO 开始随机移动\n        this.move();\n\n        if (this.manager.enableInstancing) {\n            this.changeInstancingBatch(true); //如果当前开启合批，则跟随开启\n        }\n\n        this.changeShadow(this.manager.enableShadow);\n    }\n\n    onDestroy () {\n        if (this.tweenMove) {\n            this.tweenMove.stop();\n            this.tweenMove = null;\n        }\n    }\n\n    move () {\n        let nextPoint = new Vec3((-8 - 3 * this.manager.currentLevel) + Math.random() * (16 + 6 * this.manager.currentLevel), 0, -20 + Math.random() * (26 + 5*this.manager.currentLevel));\n\n        let offset = nextPoint.clone().subtract(this.node.position);\n\n        this.node.forward = offset.clone().normalize().negative();\n\n        let costTime = offset.length() / 2;\n\n        if (this.tweenMove) {\n            this.tweenMove.stop();\n            this.tweenMove = null;\n        }\n\n        this.tweenMove = new Tween(this.node).to(costTime, {position: nextPoint}).call(()=>{\n            this.move();\n        }).start();\n    }\n\n    changeInstancingBatch (isEnable) {\n        let arrInstancing = this.node.getComponentsInChildren(instacingMaterial);\n        arrInstancing.forEach((instancing)=>{\n            instancing.enableInstancing = isEnable;\n        });\n\n        if (isEnable) {\n            this.node.getComponent(SkeletalAnimationComponent).play();\n        }\n    }\n\n    changeShadow (isEnable: boolean) {\n        let arrModel = this.node.getComponentsInChildren(SkinningModelComponent);\n        arrModel.forEach((model)=>{\n            model.shadowCastingMode = isEnable ? SkinningModelComponent.ShadowCastingMode.ON: SkinningModelComponent.ShadowCastingMode.OFF;\n        });\n\n        \n    }\n\n    // update (deltaTime: number) {\n    //     // Your update function goes here.\n    // }\n}\n"]}