{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Performance/Creator3.5.0_3D_StaticBatch/assets/script/TestStaticBatch.ts"],"names":["_decorator","Component","Node","find","BatchingUtility","resources","instantiate","ccclass","property","TestStaticBatch","toggleEnable","toggle","isChecked","node","destroyAllChildren","load","err","prefab","console","log","p","parent","toggleGrass","grassGroupNode","islands","newNode","batchStaticModel","destroy","toggleStone","stoneGroupNode","toggleTree","treeGroupNode"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, find, BatchingUtility, Toggle, resources, Prefab, instantiate } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TestStaticBatch')\nexport class TestStaticBatch extends Component {\n\n    toggleEnable (toggle: Toggle) {\n        let isChecked = toggle.isChecked;\n\n        if (isChecked) {\n            let node = find('islands/Normal')!;\n            if (node) {\n                node.destroyAllChildren();\n            }\n\n            resources.load('staticObj', (err: any, prefab: Prefab) => {\n                if (err) {\n                    console.log(\"load prefab staticObj err: \", err);\n                    return;\n                }\n\n                let p = instantiate(prefab)!;\n                p.parent = node;\n\n                console.log(p);\n            })\n        } else {\n            let node = find('islands/Normal')!;\n            if (node) {\n                node.destroyAllChildren();\n            }\n        }\n    }\n\n    toggleGrass (toggle: Toggle) {\n        let isChecked = toggle.isChecked;\n\n        if (isChecked) {\n            let grassGroupNode = find('islands/Normal/staticObj/grassGroup')!;\n            let islands = find('islands')!;\n\n            let newNode = new Node('grass-static-node');\n            newNode.parent = islands;\n            BatchingUtility.batchStaticModel(grassGroupNode, newNode);\n\n            console.log(newNode);\n        } else {\n            let node = find('islands/grass-static-node')!;\n            if (node) {\n                node.destroy();\n            }\n        }\n    }\n\n    toggleStone (toggle: Toggle) {\n        let isChecked = toggle.isChecked;\n\n        if (isChecked) {\n            let stoneGroupNode = find('islands/Normal/staticObj/stoneGroup')!;\n            let islands = find('islands')!;\n\n            let newNode = new Node('stone-static-node');\n            newNode.parent = islands;\n            BatchingUtility.batchStaticModel(stoneGroupNode, newNode);\n\n            console.log(newNode);\n        } else {\n            let node = find('islands/stone-static-node')!;\n            if (node) {\n                node.destroy();\n            }\n        }\n    }\n\n    toggleTree (toggle: Toggle) {\n        let isChecked = toggle.isChecked;\n\n        if (isChecked) {\n            let treeGroupNode = find('islands/Normal/staticObj/treeGroup')!;\n            let islands = find('islands')!;\n\n            let newNode = new Node('tree-static-node');\n            newNode.parent = islands;\n            BatchingUtility.batchStaticModel(treeGroupNode, newNode);\n\n            console.log(newNode);\n        } else {\n            let node = find('islands/tree-static-node')!;\n            if (node) {\n                node.destroy();\n            }\n        }\n    }\n}\n"]}