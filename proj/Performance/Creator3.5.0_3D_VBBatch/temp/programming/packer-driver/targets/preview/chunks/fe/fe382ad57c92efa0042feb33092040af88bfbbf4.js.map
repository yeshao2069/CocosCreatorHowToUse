{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Performance/Creator3.5.0_3D_VBBatch/assets/script/framework/config/storageManager.ts"],"names":["_decorator","ccclass","property","StorageManager","jsonData","path","KEY_CONFIG","markSave","saveTimer","instance","_instance","start","content","cc","sys","localStorage","getItem","length","JSON","parse","excepaiton","setInterval","scheduleSave","setConfigDataWithoutSave","key","value","account","userId","console","error","setConfigData","getConfigData","log","setGlobalData","save","getGlobalData","setUserId","getUserId","markModified","str","stringify","ls","setItem"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"StorageManager\")\nexport class StorageManager {\n    /* class member could be defined like this */\n    // dummy = '';\n\n    /* use `property` decorator if your want the member to be serializable */\n    // @property\n    // serializableDummy = 0;\n\n    static _instance: StorageManager;\n\n    static get instance () {\n        if (this._instance) {\n            return this._instance;\n        }\n\n        this._instance = new StorageManager();\n        this._instance.start();\n        return this._instance;\n    }\n\n    jsonData: any = null;\n    path: any = null;\n    KEY_CONFIG: string = 'performanceCfg';\n    markSave: boolean = false;\n    saveTimer: number = -1;\n\n    start () {\n        this.jsonData = {\n            \"userId\": \"\"\n        };\n\n        // this.path = this.getConfigPath();\n\n        var content;\n        // if (cc.sys.isNative) {\n        //     var valueObject = jsb.fileUtils.getValueMapFromFile(this.path);\n\n        //     content = valueObject[this.KEY_CONFIG];\n        // } else {\n        //     content = cc.sys.localStorage.getItem(this.KEY_CONFIG);\n        // }\n\n        content = cc.sys.localStorage.getItem(this.KEY_CONFIG);\n\n        // // 解密代码\n        // if (cc.game.config[\"encript\"]) {\n        //     var newContent = new Xxtea(\"upgradeHeroAbility\").xxteaDecrypt(content);\n        //     if (newContent && newContent.length > 0) {\n        //         content = newContent;\n        //     }\n        // }\n\n        if (content && content.length) {\n            try {\n                //初始化操作\n                var jsonData = JSON.parse(content);\n                this.jsonData = jsonData;\n            }catch (excepaiton) {\n\n            }\n\n        }\n\n        //启动无限定时器，每1秒保存一次数据，而不是无限保存数据\n        this.saveTimer = setInterval(() =>{\n            this.scheduleSave();\n        }, 500);\n    }\n\n    setConfigDataWithoutSave (key: string, value: any) {\n        var account = this.jsonData.userId;\n        if (this.jsonData[account]) {\n            this.jsonData[account][key] = value;\n        } else {\n            console.error(\"no account can not save\");\n        }\n    }\n\n    setConfigData (key: string, value: any) {\n        this.setConfigDataWithoutSave(key, value);\n\n        // this.save();\n        this.markSave = true; //标记为需要存储，避免一直在写入，而是每隔一段时间进行写入\n    }\n\n    getConfigData (key: string) {\n        var account = this.jsonData.userId;\n        if (this.jsonData[account]) {\n            var value = this.jsonData[account][key];\n            return value ? value : \"\";\n        } else {\n            cc.log(\"no account can not load\");\n            return \"\";\n        }\n    }\n\n    setGlobalData (key:string, value: any) {\n        this.jsonData[key] = value;\n        this.save();\n    }\n\n    getGlobalData (key:string) {\n        return this.jsonData[key];\n    }\n\n    setUserId (userId:string) {\n        this.jsonData.userId = userId;\n        if (!this.jsonData[userId]) {\n            this.jsonData[userId] = {};\n        }\n\n        this.save();\n    }\n\n    getUserId () {\n        return this.jsonData.userId;\n    }\n\n    scheduleSave () {\n        if (!this.markSave) {\n            return;\n        }\n\n        this.save();\n    }\n\n    /**\n     * 标记为已修改\n     */\n    markModified () {\n        this.markSave = true;\n    }\n\n    save () {\n        // 写入文件\n        var str = JSON.stringify(this.jsonData);\n\n        // // 加密代码\n        // if (cc.game.config[\"encript\"]) {\n        //     str = new Xxtea(\"upgradeHeroAbility\").xxteaEncrypt(str);\n        // }\n\n        // let zipStr = str;\n\n        this.markSave = false;\n\n        var ls = cc.sys.localStorage;\n        ls.setItem(this.KEY_CONFIG, str);\n        \n        // if (!cc.sys.isNative) {\n        //     var ls = cc.sys.localStorage;\n        //     ls.setItem(this.KEY_CONFIG, str);\n        //     return;\n        // }\n\n        // var valueObj = {};\n        // valueObj[this.KEY_CONFIG] = str;\n        // jsb.fileUtils.writeToFile(valueObj, this.path);\n\n    }\n\n    // getConfigPath () {\n\n    //     var platform = cc.sys.platform;\n\n    //     var path = \"\";\n\n    //     if (platform === cc.sys.OS_WINDOWS) {\n    //         path = \"src/conf\";\n    //     } else if (platform === cc.sys.OS_LINUX) {\n    //         path = \"./conf\";\n    //     } else {\n    //         if (cc.sys.isNative) {\n    //             path = jsb.fileUtils.getWritablePath();\n    //             path = path + \"conf\";\n    //         } else {\n    //             path = \"src/conf\";\n    //         }\n    //     }\n\n    //     return path;\n    // }\n}\n"]}