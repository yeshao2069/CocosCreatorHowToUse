{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Performance/Creator3.5.0_3D_VBBatch/assets/script/framework/util/resManager.ts"],"names":["ccclass","property","cc","_decorator","ResManager","loadRes","url","type","cb","loader","err","res","error","message","loadModuleRes","moduleName","resPath","releasePanelRes","path","deps","getDependsRecursively","release","getData","fileName","content","name","text","load","nativeUrl","getModel","modelName","Prefab","getUIPrefabRes","prefabPath","createUI","parent","prefab","node","instantiate","setPosition","find","addChild"],"mappings":"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","sourcesContent":["import { Node, SpriteFrame } from \"cc\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class ResManager {\n    public static resPath = '';\n    /**\n     * 加载资源\n     * @param url   资源路径\n     * @param type  资源类型\n     * @param cb    回调\n     * @method loadRes\n     */\n    public static loadRes (url: string, type: any, cb: Function) {\n        cc.loader.loadRes(url, type, (err, res) => {\n            if (err) {\n                cc.error(err.message || err);\n                cb(err, res);\n                return;\n            }\n\n            cb(err, res);\n        });\n    }\n\n    /**\n     * 加载模块资源\n     * @param moduleName   模块名\n     * @param url   资源路径\n     * @param type  资源类型\n     * @param cb    回调\n     * @method loadModuleRes\n     */\n    public static loadModuleRes (moduleName: string, url: string, type: any, cb: Function) {\n        cc.loader.loadRes(this.resPath+`package/${moduleName}/${url}`, type, (err, res) => {\n            if (err) {\n                cc.error(err.message || err);\n                cb(err, res);\n                return;\n            }\n\n            cb(err, res);\n        });\n    }\n\n    /**\n     * 释放资源\n     * @param path  释放资源的路径\n     * @method releasePanelRes\n     */\n    public static releasePanelRes (path: string) {\n        // 如果在这个 资源 中有一些资源与其他界面共用, 不希望被释放,则可以将这个资源从依赖列表中删除\n        const deps = cc.loader.getDependsRecursively(path);\n        cc.loader.release(deps);\n    }\n\n    public static getData (fileName:string, cb: Function) {\n        cc.loader.loadRes(this.resPath+\"data/\" + fileName, function (err, content) {\n            if (err) {\n                cc.error(err.message || err);\n                return;\n            }\n\n            let name = content.name;\n            let text = content.text;\n            if (!text) {\n                cc.loader.load(content.nativeUrl, function(err, content) {\n                    text = content;\n                    cb(err, {name: name, text: text});\n                });\n                return;\n            }\n\n            cb(err, {name: name, text: text});\n        });\n    }\n\n    public static getModel (modelName: string, cb: Function) {\n        this.loadRes(this.resPath+`model/${modelName}`, cc.Prefab, cb);\n    }\n\n    public static getUIPrefabRes (prefabPath: string, cb?: Function) {\n        this.loadRes(this.resPath+\"package/prefab/ui/\" + prefabPath, cc.Prefab, cb);\n    }\n\n    public static createUI (path: string, cb?: Function, parent?: Node) {\n        this.getUIPrefabRes(path, function (err, prefab) {\n            if (err) return;\n            var node = cc.instantiate(prefab);\n            node.setPosition(0, 0, 0);\n            if (!parent) {\n                parent = cc.find(\"Canvas\");\n            }\n\n            parent.addChild(node);\n            cb(null, node);\n        });\n    }\n}\n"]}