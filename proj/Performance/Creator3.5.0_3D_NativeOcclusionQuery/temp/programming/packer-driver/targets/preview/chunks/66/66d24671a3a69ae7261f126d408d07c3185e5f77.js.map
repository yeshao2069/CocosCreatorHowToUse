{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Performance/Creator3.5.0_3D_NativeOcclusionQuery/assets/scripts/occulusion-query.ts"],"names":["_decorator","Component","Toggle","director","log","setDisplayStats","NATIVE","ccclass","property","OcclusionQuery","start","toggleOcclusionQuery","isChecked","root","pipeline","getOcclusionQueryEnabled","node","on","EventType","TOGGLE","onToggle","toggle","setOcclusionQueryEnabled"],"mappings":";;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,G,OAAAA,G;AAAKC,MAAAA,e,OAAAA,e;;AACpDC,MAAAA,M,UAAAA,M;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;gCAGjBS,c,WADZF,OAAO,CAAC,gBAAD,C,UAEHC,QAAQ,CAACN,MAAD,C,2BAFb,MACaO,cADb,SACoCR,SADpC,CAC8C;AAAA;AAAA;;AAAA;AAAA;;AAI1CS,QAAAA,KAAK,GAAI;AACLL,UAAAA,eAAe,CAAC,IAAD,CAAf;;AAEA,cAAIC,MAAJ,EAAY;AACR,iBAAKK,oBAAL,CAA0BC,SAA1B,GAAsCT,QAAQ,CAACU,IAAT,CAAcC,QAAd,CAAuBC,wBAAvB,EAAtC;AACH,WAFD,MAEO;AACH,iBAAKJ,oBAAL,CAA0BC,SAA1B,GAAsC,KAAtC;AACH;;AACD,eAAKD,oBAAL,CAA0BK,IAA1B,CAA+BC,EAA/B,CAAkCf,MAAM,CAACgB,SAAP,CAAiBC,MAAnD,EAA2D,KAAKC,QAAhE,EAA0E,IAA1E;AACAhB,UAAAA,GAAG,CAAC,8BAA8B,KAAKO,oBAAL,CAA0BC,SAAzD,CAAH;AACH;;AAEDQ,QAAAA,QAAQ,CAAEC,MAAF,EAAkB;AACtB,cAAIf,MAAJ,EAAY;AACRH,YAAAA,QAAQ,CAACU,IAAT,CAAcC,QAAd,CAAuBQ,wBAAvB,CAAgDD,MAAM,CAACT,SAAvD;AACH;;AACDR,UAAAA,GAAG,CAAC,8BAA8BiB,MAAM,CAACT,SAAtC,CAAH;AACH;;AArByC,O;;;;;iBAEX,I","sourcesContent":["\nimport { _decorator, Component, Node, Toggle, director, log, setDisplayStats } from 'cc';\nimport { NATIVE } from 'cc/env';\nconst { ccclass, property } = _decorator;\n\n@ccclass('OcclusionQuery')\nexport class OcclusionQuery extends Component {\n    @property(Toggle)\n    toggleOcclusionQuery: Toggle = null!;\n\n    start () {\n        setDisplayStats(true);\n\n        if (NATIVE) {\n            this.toggleOcclusionQuery.isChecked = director.root.pipeline.getOcclusionQueryEnabled();    \n        } else {\n            this.toggleOcclusionQuery.isChecked = false;\n        }\n        this.toggleOcclusionQuery.node.on(Toggle.EventType.TOGGLE, this.onToggle, this);\n        log('Occlusion query enabled: ' + this.toggleOcclusionQuery.isChecked);\n    }\n\n    onToggle (toggle: Toggle) {\n        if (NATIVE) {\n            director.root.pipeline.setOcclusionQueryEnabled(toggle.isChecked);\n        }\n        log('Occlusion query enabled: ' + toggle.isChecked);\n    }\n}\n"]}