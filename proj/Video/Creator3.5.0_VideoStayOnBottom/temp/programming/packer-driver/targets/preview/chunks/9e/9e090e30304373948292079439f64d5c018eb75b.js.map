{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Video/Creator3.5.0_VideoStayOnBottom/assets/VideoStayOnBottom.ts"],"names":["_decorator","Component","Node","VideoPlayer","Label","macro","Prefab","Button","find","instantiate","AnimationComponent","Color","Animation","view","ccclass","property","ENABLE_TRANSPARENT_CANVAS","TIPS","VideoStayOnBottom","__id","_animList","_intervalID","start","node","btnPlay","getComponent","interactable","btnPause","btnStop","onCreateBarrage","tempBarrage","___id","pos","getPosition","x","y","randomNum","getFrameSize","height","setPosition","parent","r","g","b","newNode","getChildByName","label","color","idx","Math","floor","length","string","animComp","on","EventType","STOP","destroy","onClearBarrages","clearInterval","keys","Object","i","len","key","anim","onOpenBarrages","setInterval","onPlayAnim","onCloseBarrages","onPauseAnim","getAnimationState","isPaused","resume","play","pause","tips","active","videoPlayer","stop","min","max","random"],"mappings":";;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,K,OAAAA,K;AACtDC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,kB,OAAAA,kB;AAAoBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,S,OAAAA,S;AAAmBC,MAAAA,I,OAAAA,I;;;;;;;OAC/E;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBf,U,GAE9B;;AACAK,MAAAA,KAAK,CAACW,yBAAN,GAAkC,IAAlC;AAEMC,MAAAA,I,GAAO,CACT,2CADS,EAET,2IAFS,EAGT,sCAHS,EAIT,0BAJS,EAKT,0BALS,EAMT,kBANS,EAOT,6BAPS,EAQT,WARS,EAST,8BATS,EAUT,WAVS,EAWT,yBAXS,C;;mCAeAC,iB,WADZJ,OAAO,CAAC,mBAAD,C,UAGHC,QAAQ,CAACT,MAAD,C,UAERS,QAAQ,CAACZ,WAAD,C,UAERY,QAAQ,CAACb,IAAD,C,UAERa,QAAQ,CAACb,IAAD,C,2BATb,MACagB,iBADb,SACuCjB,SADvC,CACiD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAW7CkB,IAX6C,GAW7B,CAX6B;AAAA,eAY7CC,SAZ6C,GAYzB,EAZyB;AAAA,eAa7CC,WAb6C,GAatB,CAbsB;AAAA;;AAmB7CC,QAAAA,KAAK,GAAI;AACL,eAAKH,IAAL,GAAY,CAAZ;AACA,eAAKC,SAAL,GAAiB,EAAjB;AAEA,cAAIG,IAAI,GAAGf,IAAI,CAAC,aAAD,CAAf;AACA,eAAKgB,OAAL,GAAeD,IAAI,CAACE,YAAL,CAAkBlB,MAAlB,CAAf;AACA,eAAKiB,OAAL,CAAaE,YAAb,GAA4B,IAA5B;AAEAH,UAAAA,IAAI,GAAGf,IAAI,CAAC,cAAD,CAAX;AACA,eAAKmB,QAAL,GAAgBJ,IAAI,CAACE,YAAL,CAAkBlB,MAAlB,CAAhB;AACA,eAAKoB,QAAL,CAAcD,YAAd,GAA6B,KAA7B;AAEAH,UAAAA,IAAI,GAAGf,IAAI,CAAC,aAAD,CAAX;AACA,eAAKoB,OAAL,GAAeL,IAAI,CAACE,YAAL,CAAkBlB,MAAlB,CAAf;AACA,eAAKqB,OAAL,CAAaF,YAAb,GAA4B,KAA5B;AACH,SAlC4C,CAoC7C;;;AACAG,QAAAA,eAAe,GAAI;AACf,cAAIN,IAAI,GAAGd,WAAW,CAAC,KAAKqB,WAAN,CAAtB;AACA,YAAE,KAAKX,IAAP,CAFe,CAGf;;AACAI,UAAAA,IAAI,CAACQ,KAAL,GAAa,KAAKZ,IAAlB;AACA,cAAIa,GAAG,GAAGT,IAAI,CAACU,WAAL,EAAV;AACAD,UAAAA,GAAG,CAACE,CAAJ,GAAQ,CAAR;AACAF,UAAAA,GAAG,CAACG,CAAJ,GAAQ,KAAKC,SAAL,CAAe,GAAf,EAAoB,CAAC,GAArB,IAA4BvB,IAAI,CAACwB,YAAL,GAAoBC,MAApB,GAA6B,CAAjE;AACAf,UAAAA,IAAI,CAACgB,WAAL,CAAiBP,GAAjB;AACAT,UAAAA,IAAI,CAACiB,MAAL,GAAc,KAAKjB,IAAnB;AACA,cAAIkB,CAAC,GAAG,KAAKL,SAAL,CAAe,CAAf,EAAkB,GAAlB,CAAR;AACA,cAAIM,CAAC,GAAG,KAAKN,SAAL,CAAe,CAAf,EAAkB,GAAlB,CAAR;AACA,cAAIO,CAAC,GAAG,KAAKP,SAAL,CAAe,CAAf,EAAkB,GAAlB,CAAR;AACA,cAAIQ,OAAO,GAAGrB,IAAI,CAACsB,cAAL,CAAoB,MAApB,CAAd;AACA,cAAIC,KAAK,GAAGF,OAAO,CAACnB,YAAR,CAAqBrB,KAArB,CAAZ;AACA0C,UAAAA,KAAK,CAACC,KAAN,GAAc,IAAIpC,KAAJ,CAAU8B,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,CAAd;AACA,cAAIK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKd,SAAL,CAAe,CAAf,EAAkBnB,IAAI,CAACkC,MAAL,GAAc,CAAhC,CAAX,CAAV;AACAL,UAAAA,KAAK,CAACM,MAAN,GAAenC,IAAI,CAAC+B,GAAD,CAAnB;AACA,cAAIK,QAAQ,GAAGT,OAAO,CAACnB,YAAR,CAAqBf,kBAArB,CAAf;AACA2C,UAAAA,QAAQ,CAACC,EAAT,CAAY1C,SAAS,CAAC2C,SAAV,CAAoBC,IAAhC,EAAsC,MAAM;AACxC;AACA,mBAAO,KAAKpC,SAAL,CAAeG,IAAI,CAACQ,KAApB,CAAP;AACAR,YAAAA,IAAI,CAACkC,OAAL;AACH,WAJD;AAKA,eAAKrC,SAAL,CAAe,KAAKD,IAApB,IAA4BkC,QAA5B;AACH,SA9D4C,CAgE7C;;;AACAK,QAAAA,eAAe,GAAI;AACf,eAAKrC,WAAL,IAAoBsC,aAAa,CAAC,KAAKtC,WAAN,CAAjC;AACA,cAAIuC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY,KAAKxC,SAAjB,CAAX;;AACA,eAAK,IAAI0C,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,IAAI,CAACT,MAA3B,EAAmCW,CAAC,GAAGC,GAAvC,EAA4C,EAAED,CAA9C,EAAiD;AAC7C,gBAAIE,GAAG,GAAGJ,IAAI,CAACE,CAAD,CAAd;AACA,gBAAIG,IAAI,GAAG,KAAK7C,SAAL,CAAe4C,GAAf,CAAX;AACAC,YAAAA,IAAI,CAAC1C,IAAL,CAAUkC,OAAV;AACH;;AACD,eAAKrC,SAAL,CAAe+B,MAAf,GAAwB,CAAxB;AACH,SA1E4C,CA4E7C;;;AACAe,QAAAA,cAAc,GAAI;AACd,eAAK7C,WAAL,GAAmB8C,WAAW,CAAC,MAAM;AACjC,iBAAKtC,eAAL;AACH,WAF6B,EAE3B,IAF2B,CAA9B;AAGA,eAAKuC,UAAL;AACH,SAlF4C,CAoF7C;;;AACAC,QAAAA,eAAe,GAAI;AACf,eAAKhD,WAAL,IAAoBsC,aAAa,CAAC,KAAKtC,WAAN,CAAjC;AACA,eAAKiD,WAAL;AACH,SAxF4C,CA0F7C;;;AACAF,QAAAA,UAAU,GAAI;AACV,cAAIR,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY,KAAKxC,SAAjB,CAAX;;AACA,eAAK,IAAI0C,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,IAAI,CAACT,MAA3B,EAAmCW,CAAC,GAAGC,GAAvC,EAA4C,EAAED,CAA9C,EAAiD;AAC7C,gBAAIE,GAAG,GAAGJ,IAAI,CAACE,CAAD,CAAd;AACA,gBAAIG,IAAI,GAAG,KAAK7C,SAAL,CAAe4C,GAAf,CAAX;;AACA,gBAAIC,IAAI,CAACM,iBAAL,CAAuB,kBAAvB,EAA2CC,QAA/C,EAAyD;AACrDP,cAAAA,IAAI,CAACQ,MAAL;AACH,aAFD,MAGK;AACDR,cAAAA,IAAI,CAACS,IAAL;AACH;AACJ;AACJ,SAvG4C,CAyG7C;;;AACAJ,QAAAA,WAAW,GAAI;AACX,eAAK,IAAIN,GAAT,IAAgB,KAAK5C,SAArB,EAAgC;AAC5B,gBAAI6C,IAAI,GAAG,KAAK7C,SAAL,CAAe4C,GAAf,CAAX;AACAC,YAAAA,IAAI,CAACU,KAAL;AACH;AACJ,SA/G4C,CAiH7C;;;AACAD,QAAAA,IAAI,GAAI;AACJ,eAAKE,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACA,eAAKrD,OAAL,CAAaE,YAAb,GAA4B,KAA5B;AACA,eAAKC,QAAL,CAAcD,YAAd,GAA6B,IAA7B;AACA,eAAKE,OAAL,CAAaF,YAAb,GAA4B,IAA5B;AACA,eAAKoD,WAAL,CAAiBJ,IAAjB;AACA,eAAKR,cAAL;AACH,SAzH4C,CA2H7C;;;AACAS,QAAAA,KAAK,GAAI;AACL,eAAKnD,OAAL,CAAaE,YAAb,GAA4B,IAA5B;AACA,eAAKC,QAAL,CAAcD,YAAd,GAA6B,KAA7B;AACA,eAAKE,OAAL,CAAaF,YAAb,GAA4B,IAA5B;AACA,eAAKoD,WAAL,CAAiBH,KAAjB;AACA,eAAKN,eAAL;AACH,SAlI4C,CAoI7C;;;AACAU,QAAAA,IAAI,GAAI;AACJ,eAAKH,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACA,eAAKrD,OAAL,CAAaE,YAAb,GAA4B,IAA5B;AACA,eAAKC,QAAL,CAAcD,YAAd,GAA6B,KAA7B;AACA,eAAKE,OAAL,CAAaF,YAAb,GAA4B,KAA5B;AACA,eAAKoD,WAAL,CAAiBC,IAAjB;AACA,eAAKrB,eAAL;AACH;;AAEDtB,QAAAA,SAAS,CAAE4C,GAAF,EAAeC,GAAf,EAA2B;AAChC,iBAAOhC,IAAI,CAACiC,MAAL,MAAiBD,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAAzC;AACH;;AAhJ4C,O","sourcesContent":["\nimport { _decorator, Component, Node, VideoPlayer, Label, macro,\n    Prefab, Button, find, instantiate, AnimationComponent, Color, Animation, Sprite, view,} from 'cc';\nconst { ccclass, property } = _decorator;\n\n// 开启 Canvas 背景支持 alpha 通道\nmacro.ENABLE_TRANSPARENT_CANVAS = true;\n\nconst TIPS = [\n    '这个是一个范例，该范例是让用户知道如何把 UI 渲染到 VideoPlayer 上',\n    'UI 渲染到 VideoPlayer 上只需三个步骤：1。创建代码开启 cc.macro.ENABLE_TRANSPARENT_CANVAS 2。设置摄像机的背景颜色的透明度为零 3。勾选 VideoPlayer 组件上的 stayOnBottom 属性 -- 就 OK 了',\n    'UI 居然可以显示在 VidePlayer 上面了，👍👍👍👍👍',\n    '哇，可以做弹幕功能了... 💐💐💐💐💐',\n    '哇，可以做约会游戏了... 💐💐💐💐💐',\n    '注意：该功能只支持 web 平台',\n    '注意：该功能的效果在各个浏览器的限制下不能保持效果一致',\n    '我是打酱油的...',\n    'Cococs Creator 是最棒的，不接收反驳...',\n    '前面的说的对...',\n    '其实我也不知道要说什么，反正只是为了充数用而已'\n];\n\n@ccclass('VideoStayOnBottom')\nexport class VideoStayOnBottom extends Component {\n   \n    @property(Prefab)\n    tempBarrage !: Prefab;\n    @property(VideoPlayer)\n    videoPlayer !: VideoPlayer;\n    @property(Node)\n    barrageRoot !: Node;\n    @property(Node)\n    tips !: Node;\n\n    __id : number = 0;\n    _animList : any[] = [];\n    _intervalID : number = 0;\n\n    btnPlay !: Button;\n    btnPause !: Button;\n    btnStop !: Button;\n\n    start () {\n        this.__id = 0;\n        this._animList = [];\n\n        let node = find('Canvas/Play')!;\n        this.btnPlay = node.getComponent(Button)!;\n        this.btnPlay.interactable = true;\n\n        node = find('Canvas/Pause')!;\n        this.btnPause = node.getComponent(Button)!;\n        this.btnPause.interactable = false;\n\n        node = find('Canvas/Stop')!;\n        this.btnStop = node.getComponent(Button)!;\n        this.btnStop.interactable = false;\n    }\n\n    // 创建弹幕\n    onCreateBarrage () {\n        let node = instantiate(this.tempBarrage);\n        ++this.__id;\n        // @ts-ignore\n        node.___id = this.__id;\n        let pos = node.getPosition();\n        pos.x = 0;\n        pos.y = this.randomNum(300, -120) - view.getFrameSize().height / 2;\n        node.setPosition(pos);\n        node.parent = this.node;\n        let r = this.randomNum(0, 255);\n        let g = this.randomNum(0, 255);\n        let b = this.randomNum(0, 255);\n        let newNode = node.getChildByName('node')!;\n        let label = newNode.getComponent(Label)!;\n        label.color = new Color(r, g, b);\n        let idx = Math.floor(this.randomNum(0, TIPS.length - 1));\n        label.string = TIPS[idx];\n        let animComp = newNode.getComponent(AnimationComponent)!;\n        animComp.on(Animation.EventType.STOP, () => {\n            // @ts-ignore\n            delete this._animList[node.___id];\n            node.destroy();\n        });\n        this._animList[this.__id] = animComp;\n    }\n\n    // 清空弹幕\n    onClearBarrages () {\n        this._intervalID && clearInterval(this._intervalID);\n        let keys = Object.keys(this._animList);\n        for (let i = 0, len = keys.length; i < len; ++i) {\n            let key = keys[i];\n            let anim = this._animList[key];\n            anim.node.destroy();\n        }\n        this._animList.length = 0;\n    }\n\n    // 开启弹幕\n    onOpenBarrages () {\n        this._intervalID = setInterval(() => {\n            this.onCreateBarrage();\n        }, 1000);\n        this.onPlayAnim();\n    }\n\n    // 关闭弹幕\n    onCloseBarrages () {\n        this._intervalID && clearInterval(this._intervalID);\n        this.onPauseAnim();\n    }\n\n    // 播放弹幕动画\n    onPlayAnim () {\n        let keys = Object.keys(this._animList);\n        for (let i = 0, len = keys.length; i < len; ++i) {\n            let key = keys[i];\n            let anim = this._animList[key];\n            if (anim.getAnimationState('barrage-animClip').isPaused) {\n                anim.resume();\n            }\n            else {\n                anim.play();\n            }\n        }\n    }\n\n    // 暂停弹幕动画\n    onPauseAnim () {\n        for (let key in this._animList) {\n            let anim = this._animList[key];\n            anim.pause();\n        }\n    }\n\n    // 播放视频\n    play () {\n        this.tips.active = false;\n        this.btnPlay.interactable = false;\n        this.btnPause.interactable = true;\n        this.btnStop.interactable = true;\n        this.videoPlayer.play();\n        this.onOpenBarrages();\n    }\n\n    // 暂停视频\n    pause () {\n        this.btnPlay.interactable = true;\n        this.btnPause.interactable = false;\n        this.btnStop.interactable = true;\n        this.videoPlayer.pause();\n        this.onCloseBarrages();\n    }\n\n    // 停止视频\n    stop () {\n        this.tips.active = true;\n        this.btnPlay.interactable = true;\n        this.btnPause.interactable = false;\n        this.btnStop.interactable = false;\n        this.videoPlayer.stop();\n        this.onClearBarrages();\n    }\n\n    randomNum (min: number, max: number){\n        return Math.random() * (max - min + 1) + min;\n    }\n}\n"]}