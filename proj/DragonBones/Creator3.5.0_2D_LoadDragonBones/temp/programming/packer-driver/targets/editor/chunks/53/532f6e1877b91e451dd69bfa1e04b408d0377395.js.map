{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/DragonBones/Creator3.5.0_2D_LoadDragonBones/assets/LoadDragonBones.ts"],"names":["_decorator","Component","resources","dragonBones","ccclass","property","LoadDragonBones","ArmatureDisplay","onLoad","dynamicCreate","load","DragonBonesAsset","err","res","console","error","armatureDisplay","dragonAsset","DragonBonesAtlasAsset","dragonAtlasAsset","armatureName","playAnimation"],"mappings":";;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;;;;;;;OACrC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;iCAGjBM,e,WADZF,OAAO,CAAC,iBAAD,C,UAGHC,QAAQ,CAACF,WAAW,CAACI,eAAb,C,2BAHb,MACaD,eADb,SACqCL,SADrC,CAC+C;AAAA;AAAA;;AAAA;AAAA;;AAK3CO,QAAAA,MAAM,GAAG;AACL,eAAKC,aAAL;AACH,SAP0C,CAS3C;;;AACAA,QAAAA,aAAa,GAAG;AAEZP,UAAAA,SAAS,CAACQ,IAAV,CAAe,2BAAf,EAA4CP,WAAW,CAACQ,gBAAxD,EAA0E,CAACC,GAAD,EAAWC,GAAX,KAAgD;AACtH,gBAAGD,GAAH,EAAQ;AACJE,cAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACA;AACH;;AACD,iBAAKI,eAAL,CAAqBC,WAArB,GAAmCJ,GAAnC;AACAX,YAAAA,SAAS,CAACQ,IAAV,CAAe,qBAAf,EAAsCP,WAAW,CAACe,qBAAlD,EAAyE,CAACN,GAAD,EAAWC,GAAX,KAAoD;AACzH,kBAAGD,GAAH,EAAQ;AACJE,gBAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACA;AACH;;AACD,mBAAKI,eAAL,CAAqBG,gBAArB,GAAwCN,GAAxC;AAEA,mBAAKG,eAAL,CAAqBI,YAArB,GAAoC,cAApC;AACA,mBAAKJ,eAAL,CAAqBK,aAArB,CAAmC,OAAnC,EAA4C,CAA5C;AACH,aATD;AAUH,WAhBD;AAiBH;;AA7B0C,O","sourcesContent":["\nimport { _decorator, Component, resources, dragonBones } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LoadDragonBones')\nexport class LoadDragonBones extends Component {\n\n    @property(dragonBones.ArmatureDisplay)\n    armatureDisplay !: dragonBones.ArmatureDisplay;\n\n    onLoad() {\n        this.dynamicCreate();\n    }\n\n    // 动态创建\n    dynamicCreate() {\n\n        resources.load('dragonBones/NewDragonTest', dragonBones.DragonBonesAsset, (err: any, res: dragonBones.DragonBonesAsset)=> {\n            if(err) {\n                console.error(err);\n                return;\n            }\n            this.armatureDisplay.dragonAsset = res;\n            resources.load('dragonBones/texture', dragonBones.DragonBonesAtlasAsset, (err: any, res: dragonBones.DragonBonesAtlasAsset)=>{\n                if(err) {\n                    console.error(err);\n                    return;\n                }\n                this.armatureDisplay.dragonAtlasAsset = res;\n\n                this.armatureDisplay.armatureName = \"armatureName\";\n                this.armatureDisplay.playAnimation('stand', 0);\n            });\n        });\n    }\n}\n\n"]}