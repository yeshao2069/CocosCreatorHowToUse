{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/DragonBones/Creator3.5.0_2D_DragonBonesCollider/assets/script/DragonBonesCollider.ts"],"names":["_decorator","Component","PhysicsSystem2D","Contact2DType","Color","Sprite","EPhysics2DDrawFlags","ccclass","property","DragonBonesCollider","touchingCountMap","Map","debugDrawFlags","start","instance","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","onEnable","Shape","onDisable","addContact","c","count","get","node","set","sprite","getComponent","color","RED","removeContact","delete","WHITE","a","b"],"mappings":";;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,e,OAAAA,e;AAClCC,MAAAA,a,OAAAA,a;AAA2BC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,mB,OAAAA,mB;;;;;;;OACxC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;qCAGjBS,mB,WADZF,OAAO,CAAC,qBAAD,C,gBAAR,MACaE,mBADb,SACyCR,SADzC,CACmD;AAAA;AAAA;AAAA,eAE/CS,gBAF+C,GAET,IAAIC,GAAJ,EAFS;AAAA,eAIvCC,cAJuC,GAIf,CAJe;AAAA;;AAK/CC,QAAAA,KAAK,GAAI;AACL;AACAX,UAAAA,eAAe,CAACY,QAAhB,CAAyBC,EAAzB,CAA4BZ,aAAa,CAACa,aAA1C,EAAyD,KAAKC,cAA9D,EAA8E,IAA9E;AACAf,UAAAA,eAAe,CAACY,QAAhB,CAAyBC,EAAzB,CAA4BZ,aAAa,CAACe,WAA1C,EAAuD,KAAKC,YAA5D,EAA0E,IAA1E;AACA,eAAKP,cAAL,GAAsBV,eAAe,CAACY,QAAhB,CAAyBF,cAA/C;AACH;;AAEDQ,QAAAA,QAAQ,GAAI;AACRlB,UAAAA,eAAe,CAACY,QAAhB,CAAyBF,cAAzB,GAA0C,KAAKA,cAAL,GAAsBN,mBAAmB,CAACe,KAApF;AACH;;AAEDC,QAAAA,SAAS,GAAI;AACTpB,UAAAA,eAAe,CAACY,QAAhB,CAAyBF,cAAzB,GAA0C,KAAKA,cAA/C;AACH;;AAEDW,QAAAA,UAAU,CAAEC,CAAF,EAAiB;AACvB,cAAIC,KAAK,GAAG,KAAKf,gBAAL,CAAsBgB,GAAtB,CAA0BF,CAAC,CAACG,IAA5B,KAAqC,CAAjD;AACA,eAAKjB,gBAAL,CAAsBkB,GAAtB,CAA0BJ,CAAC,CAACG,IAA5B,EAAkC,EAAEF,KAApC;AAEA,cAAII,MAAM,GAAGL,CAAC,CAACM,YAAF,CAAezB,MAAf,CAAb;;AACA,cAAIwB,MAAJ,EAAY;AACRA,YAAAA,MAAM,CAACE,KAAP,GAAe3B,KAAK,CAAC4B,GAArB;AACH;AACJ;;AAEDC,QAAAA,aAAa,CAAET,CAAF,EAAiB;AAC1B,cAAIC,KAAK,GAAG,KAAKf,gBAAL,CAAsBgB,GAAtB,CAA0BF,CAAC,CAACG,IAA5B,KAAqC,CAAjD;AACA,YAAEF,KAAF;;AACA,cAAIA,KAAK,IAAI,CAAb,EAAgB;AACZ,iBAAKf,gBAAL,CAAsBwB,MAAtB,CAA6BV,CAAC,CAACG,IAA/B;AAEA,gBAAIE,MAAM,GAAGL,CAAC,CAACM,YAAF,CAAezB,MAAf,CAAb;;AACA,gBAAIwB,MAAJ,EAAY;AACRA,cAAAA,MAAM,CAACE,KAAP,GAAe3B,KAAK,CAAC+B,KAArB;AACH;AACJ,WAPD,MAQK;AACD,iBAAKzB,gBAAL,CAAsBkB,GAAtB,CAA0BJ,CAAC,CAACG,IAA5B,EAAkCF,KAAlC;AACH;AACJ;;AAEDR,QAAAA,cAAc,CAAEmB,CAAF,EAAiBC,CAAjB,EAAgC;AAC1C,eAAKd,UAAL,CAAgBa,CAAhB;AACA,eAAKb,UAAL,CAAgBc,CAAhB;AACH;;AAEDlB,QAAAA,YAAY,CAAEiB,CAAF,EAAiBC,CAAjB,EAAgC;AACxC,eAAKJ,aAAL,CAAmBG,CAAnB;AACA,eAAKH,aAAL,CAAmBI,CAAnB;AACH;;AAtD8C,O","sourcesContent":["import { _decorator, Component, Node, PhysicsSystem2D, \n    Contact2DType, Collider2D, Color, Sprite, EPhysics2DDrawFlags } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('DragonBonesCollider')\nexport class DragonBonesCollider extends Component {\n\n    touchingCountMap: Map<Node, number> = new Map;\n\n    private debugDrawFlags:number = 0;\n    start () {\n        // Your initialization goes here.\n        PhysicsSystem2D.instance.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n        PhysicsSystem2D.instance.on(Contact2DType.END_CONTACT, this.onEndContact, this);\n        this.debugDrawFlags = PhysicsSystem2D.instance.debugDrawFlags;\n    }\n\n    onEnable () {\n        PhysicsSystem2D.instance.debugDrawFlags = this.debugDrawFlags | EPhysics2DDrawFlags.Shape;\n    }\n\n    onDisable () {\n        PhysicsSystem2D.instance.debugDrawFlags = this.debugDrawFlags;\n    }\n\n    addContact (c: Collider2D) {\n        let count = this.touchingCountMap.get(c.node) || 0;\n        this.touchingCountMap.set(c.node, ++count);\n\n        let sprite = c.getComponent(Sprite);\n        if (sprite) {\n            sprite.color = Color.RED;\n        }\n    }\n\n    removeContact (c: Collider2D) {\n        let count = this.touchingCountMap.get(c.node) || 0;\n        --count;\n        if (count <= 0) {\n            this.touchingCountMap.delete(c.node);\n\n            let sprite = c.getComponent(Sprite);\n            if (sprite) {\n                sprite.color = Color.WHITE;\n            }\n        }\n        else {\n            this.touchingCountMap.set(c.node, count);\n        }\n    }\n\n    onBeginContact (a: Collider2D, b: Collider2D) {\n        this.addContact(a);\n        this.addContact(b);\n    }\n\n    onEndContact (a: Collider2D, b: Collider2D) {\n        this.removeContact(a);\n        this.removeContact(b);\n    }\n}\n"]}