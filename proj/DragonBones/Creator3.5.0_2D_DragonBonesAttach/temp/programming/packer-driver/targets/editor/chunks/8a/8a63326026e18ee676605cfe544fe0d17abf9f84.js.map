{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/DragonBones/Creator3.5.0_2D_DragonBonesAttach/assets/script/FixDragonBonesAttachBug.js"],"names":["_cjsLoader","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","cc","game","once","Game","EVENT_ENGINE_INITED","js","mixin","getClassByName","prototype","_syncAttachedNode","_inited","rootMatrix","_armatureNode","worldMatrix","boneInfos","isCached","_armatureDisplay","isAnimationCached","_curFrame","sockets","socketNodes","scale","Vec3","matrixHandle","node","boneMat","tm","_tempMat4","m00","a","m01","b","m04","c","m05","d","m12","tx","m13","ty","_oldScale","clone","set","matrix","multiply","bones","_armature","getBones","l","length","sock","boneNode","target","isValid","delete","path","splice","bone","boneIndex","globalTransformMatrix","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n\n cc.game.once(cc.Game.EVENT_ENGINE_INITED, function() {\n\n     cc.js.mixin(cc.js.getClassByName('dragonBones.AttachUtil').prototype, {\n         \n         _syncAttachedNode () {\n             if (!this._inited) return;\n             const rootMatrix = this._armatureNode.worldMatrix;\n     \n             let boneInfos;\n             const isCached = this._armatureDisplay.isAnimationCached();\n             if (isCached && this._armatureDisplay) {\n                 boneInfos = this._armatureDisplay._curFrame && this._armatureDisplay._curFrame.boneInfos;\n                 if (!boneInfos) return;\n             }\n     \n             const sockets = this._armatureDisplay.sockets;\n             const socketNodes = this._armatureDisplay.socketNodes;\n             const scale = new cc.Vec3();\n     \n             const matrixHandle = (node, boneMat) => {\n                 const tm = _tempMat4;\n                 tm.m00 = boneMat.a;\n                 tm.m01 = boneMat.b;\n                 tm.m04 = -boneMat.c;\n                 tm.m05 = -boneMat.d;\n                 tm.m12 = boneMat.tx;\n                 tm.m13 = boneMat.ty;\n                 if (!node._oldScale) {\n                     // back origin scale info\n                     node._oldScale = node.scale.clone();\n                 }\n                 scale.set(node._oldScale);\n                 node.matrix = _tempMat4;\n                 node.scale = scale.multiply(this._armatureNode.scale);\n             };\n     \n             const bones = this._armature.getBones();\n     \n             for (let l = sockets.length - 1; l >= 0; l--) {\n                 const sock = sockets[l];\n                 const boneNode = sock.target;\n     \n                 if (!boneNode) continue;\n                 // Node has been destroy\n                 if (!boneNode.isValid) {\n                     socketNodes.delete(sock.path);\n                     sockets.splice(l, 1);\n                     continue;\n                 }\n                 // Bone has been destroy\n                 const bone = isCached ? boneInfos[sock.boneIndex] : bones[sock.boneIndex];\n                 if (!bone) continue;\n     \n                 // if (!bone) {\n                 //     boneNode.removeFromParent();\n                 //     boneNode.destroy();\n                 //     socketNodes.delete(sock.path);\n                 //     sockets.splice(l, 1);\n                 //     continue;\n                 // }\n                 matrixHandle(boneNode, bone.globalTransformMatrix);\n             }\n         }\n     });\n });\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, {});\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}