{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Physics/Creator3.5.0_3D_PhysicsPlaneCollider/assets/script/TriggerTest.ts"],"names":["_decorator","Component","Material","ColliderComponent","ModelComponent","LabelComponent","VerticalTextAlignment","UITransformComponent","Size","Color","ccclass","property","TriggerTest","type","visible","USE_MATERIAL","USE_LABEL","_prev","_amount","start","collider","getComponent","on","onTriggerForUseMaterial","onTriggerForUseLabel","event","modelCom","otherCollider","node","material","enterMat","exitMat","selfCollider","label","string","fontSize","lineHeight","verticalAlign","CENTER","contentSize","color","RED","enabled","uuid","name"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Quat, ITriggerEvent, Material, ColliderComponent, ModelComponent, LabelComponent, VerticalTextAlignment, UITransformComponent, Size, Color } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"TriggerTest\")\nexport class TriggerTest extends Component {\n\n    @property\n    USE_MATERIAL = true;\n\n    @property({ type: Material, visible: function (this: TriggerTest) { return this.USE_MATERIAL; } })\n    enterMat: Material = null as any;\n\n    @property({ type: Material, visible: function (this: TriggerTest) { return this.USE_MATERIAL; } })\n    exitMat: Material = null as any;\n\n    @property\n    USE_LABEL = false;\n\n    @property({ type: LabelComponent, visible: function (this: TriggerTest) { return this.USE_LABEL; } })\n    label: LabelComponent = null as any;\n\n    private _prev: Boolean[] = [];\n    private _amount: number = 0;\n\n    start () {\n        const collider = this.getComponent(ColliderComponent);\n        if (collider) {\n            if (this.USE_MATERIAL) {\n                collider.on('onTriggerEnter', this.onTriggerForUseMaterial, this);\n                collider.on('onTriggerStay', this.onTriggerForUseMaterial, this);\n                collider.on('onTriggerExit', this.onTriggerForUseMaterial, this);\n            }\n            if (this.USE_LABEL) {\n                collider.on('onTriggerEnter', this.onTriggerForUseLabel, this);\n                collider.on('onTriggerStay', this.onTriggerForUseLabel, this);\n                collider.on('onTriggerExit', this.onTriggerForUseLabel, this);\n            }\n        }\n    }\n\n    onTriggerForUseMaterial (event: ITriggerEvent) {\n        if (event.type == 'onTriggerEnter') {\n            const modelCom = event.otherCollider.node.getComponent(ModelComponent);\n            if (modelCom) {\n                modelCom.material = this.enterMat;\n            }\n        } else if (event.type == 'onTriggerExit') {\n            const modelCom = event.otherCollider.node.getComponent(ModelComponent);\n            if (modelCom) {\n                modelCom.material = this.exitMat;\n            }\n        }\n    }\n\n    onTriggerForUseLabel (event: ITriggerEvent) {\n        const collider = this.getComponent(ColliderComponent);\n        if (collider != event.selfCollider) {\n            this.label.string = \"[错误]：self不等于自己，请提交 issue\";\n            this.label.fontSize = 40;\n            this.label.lineHeight = 40;\n            this.label.verticalAlign = VerticalTextAlignment.CENTER;\n            this.label.getComponent(UITransformComponent)!.contentSize = new Size(400, 400);\n            this.label.color = Color.RED;\n            this.enabled = false;\n            return;\n        }\n        if (event.type == 'onTriggerStay') {\n            if (!this._prev[event.otherCollider.uuid]) {\n                this._prev[event.otherCollider.uuid] = true;\n            } else {\n                return;\n            }\n        } else if (event.type == 'onTriggerExit') {\n            this._prev[event.otherCollider.uuid] = false;\n        }\n\n        if (this.label) {\n            if (this._amount++ > 11) { this.label.string = ''; this._amount = 0; }\n            this.label.string += event.selfCollider.node.name + '__' + event.type + '__' + event.otherCollider.node.name + ' ';\n        }\n    }\n}\n"]}