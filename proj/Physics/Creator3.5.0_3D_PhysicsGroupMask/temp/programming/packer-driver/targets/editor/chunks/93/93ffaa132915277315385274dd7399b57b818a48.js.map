{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Physics/Creator3.5.0_3D_PhysicsGroupMask/assets/script/GroupMaskTest.ts"],"names":["_decorator","Component","Node","Enum","Collider","RigidBody","PhysicsSystem","ccclass","property","menu","EPHY_MASK","GroupMaskTestItem","type","PhysicsGroup","DEFAULT","M_ALL","GroupMaskTest","start","items","forEach","i","target","c","getComponent","setGroup","group","setMask","mask","testBody","setItemMaskToNone","event","index","int","parseInt","M_NONE","wakeUp"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,Q,OAAAA,Q;AAAsBC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,a,OAAAA,a;;;;;;;OACvE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA;AAArB,O,GAA8BT,U;;iBAExBU,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;SAAAA,S,yBAAAA,S;;AAGX;AAEDP,MAAAA,IAAI,CAACO,SAAD,CAAJ;AAGMC,MAAAA,iB,WADLJ,OAAO,CAAC,mBAAD,C,UAEHC,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEV;AAAR,OAAD,C,UAGRM,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEN,aAAa,CAACO;AAAtB,OAAD,C,UAGRL,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEF;AAAR,OAAD,C,2BARb,MACMC,iBADN,CACwB;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA,O;;;;;iBAEL,I;;;;;;;iBAGPL,aAAa,CAACO,YAAd,CAA2BC,O;;;;;;;iBAG5BJ,SAAS,CAACK,K;;;;+BAIRC,a,YADZT,OAAO,CAAC,eAAD,C,UAGHC,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,CAACD,iBAAD;AAAR,OAAD,C,UAGRH,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEP;AAAR,OAAD,C,6BANb,MACaW,aADb,SACmCf,SADnC,CAC6C;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAQzCgB,QAAAA,KAAK,GAAI;AACL,eAAKC,KAAL,CAAWC,OAAX,CAAoBC,CAAD,IAA0B;AACzC,gBAAIA,CAAC,CAACC,MAAN,EAAc;AACV,kBAAIC,CAAC,GAAGF,CAAC,CAACC,MAAF,CAASE,YAAT,CAAsBnB,QAAtB,CAAR;AACAkB,cAAAA,CAAC,CAACE,QAAF,CAAWJ,CAAC,CAACK,KAAb;AACAH,cAAAA,CAAC,CAACI,OAAF,CAAUN,CAAC,CAACO,IAAZ;AACH;AACJ,WAND;AAQA,eAAKC,QAAL,CAAcF,OAAd,CAAsB,CAAtB;AACH;;AAEDG,QAAAA,iBAAiB,CAAEC,KAAF,EAAqBC,KAArB,EAAoC;AACjD,gBAAMC,GAAG,GAAGC,QAAQ,CAACF,KAAD,CAApB;AACA,cAAIT,CAAC,GAAG,KAAKJ,KAAL,CAAWc,GAAX,EAAgBX,MAAhB,CAAuBE,YAAvB,CAAoCnB,QAApC,CAAR;AACAkB,UAAAA,CAAC,CAACI,OAAF,CAAUhB,SAAS,CAACwB,MAApB;AAEA,eAAKhB,KAAL,CAAWC,OAAX,CAAoBC,CAAD,IAA0B;AACzC,gBAAIA,CAAC,CAACC,MAAN,EAAc;AACV,kBAAIC,CAAC,GAAGF,CAAC,CAACC,MAAF,CAASE,YAAT,CAAsBlB,SAAtB,CAAR;AACA,kBAAIiB,CAAJ,EAAOA,CAAC,CAACa,MAAF;AACV;AACJ,WALD;AAMH;;AA/BwC,O;;;;;iBAGZ,E;;;;;;;iBAGP,I","sourcesContent":["import { _decorator, Component, Node, Enum, Collider, EventTouch, RigidBody, PhysicsSystem } from 'cc';\nconst { ccclass, property, menu } = _decorator;\n\nexport enum EPHY_MASK {\n    M_NONE = 0,\n    M_ALL = 0xffffffff\n};\n\nEnum(EPHY_MASK);\n\n@ccclass('GroupMaskTestItem')\nclass GroupMaskTestItem {\n    @property({ type: Node })\n    target: Node = null as any;\n\n    @property({ type: PhysicsSystem.PhysicsGroup })\n    group = PhysicsSystem.PhysicsGroup.DEFAULT;\n\n    @property({ type: EPHY_MASK })\n    mask = EPHY_MASK.M_ALL;\n}\n\n@ccclass('GroupMaskTest')\nexport class GroupMaskTest extends Component {\n\n    @property({ type: [GroupMaskTestItem] })\n    items: GroupMaskTestItem[] = []\n\n    @property({ type: RigidBody })\n    testBody: RigidBody = null as any;\n\n    start () {\n        this.items.forEach((i: GroupMaskTestItem) => {\n            if (i.target) {\n                let c = i.target.getComponent(Collider)!;\n                c.setGroup(i.group);\n                c.setMask(i.mask);\n            }\n        });\n\n        this.testBody.setMask(0);\n    }\n\n    setItemMaskToNone (event: EventTouch, index: string) {\n        const int = parseInt(index);\n        let c = this.items[int].target.getComponent(Collider)!;\n        c.setMask(EPHY_MASK.M_NONE);\n\n        this.items.forEach((i: GroupMaskTestItem) => {\n            if (i.target) {\n                let c = i.target.getComponent(RigidBody);\n                if (c) c.wakeUp();\n            }\n        });\n    }\n\n}\n"]}