{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Physics/Creator3.5.0_3D_PhysicsRaycast/assets/script/RaycastTest.ts"],"names":["_decorator","Component","Material","systemEvent","SystemEventType","Camera","geometry","PhysicsSystem","MeshRenderer","Label","ccclass","property","menu","ERaycastType","RaycastTest","type","PhysicsGroup","_raycastType","ALL","_ray","Ray","_maxDistance","_mask","maxDistance","v","label","string","toString","start","ingnoreLayer","onEnable","on","TOUCH_START","onTouchStart","onDisable","off","touch","event","resetAll","camera","screenPointToRay","getLocationX","getLocationY","instance","raycast","r","raycastResults","i","length","item","modelCom","collider","node","getComponent","material","rayMaterial","CLOSEST","raycastClosest","raycastClosestResult","children","defaultMaterial","onToggle","toggleCom","name","onEditFinish","editBox","parseFloat","isNaN","onMaskBtn","lb","target","getComponentInChildren"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Material, systemEvent, \n    SystemEventType, EventTouch, Camera, geometry, Touch, \n    PhysicsSystem, MeshRenderer, Toggle, Label, EditBox } from \"cc\";\nconst { ccclass, property, menu } = _decorator;\n\nenum ERaycastType {\n    ALL,\n    CLOSEST\n}\n\n@ccclass(\"RaycastTest\")\nexport class RaycastTest extends Component {\n\n    @property({ type: Material })\n    readonly defaultMaterial: Material = null as any;\n\n    @property({ type: Material })\n    readonly rayMaterial: Material = null as any;\n\n    @property({ type: Camera })\n    readonly camera: Camera = null as any;\n\n    @property({ type: Label })\n    readonly label: Label = null as any;\n\n    @property({ type: PhysicsSystem.PhysicsGroup })\n    ingnoreLayer: number = 0;\n\n    private _raycastType: ERaycastType = ERaycastType.ALL;\n    private _ray: geometry.Ray = new geometry.Ray();\n    private _maxDistance: number = 100;\n    private _mask: number = 0xffffffff;\n\n    public set maxDistance (v: number) {\n        this._maxDistance = v;\n        this.label.string = '当前检测距离：' + this._maxDistance.toString();\n    }\n\n    start () {\n        this.maxDistance = this._maxDistance;\n        this._mask &= ~this.ingnoreLayer;\n    }\n\n    onEnable () {\n        systemEvent.on(SystemEventType.TOUCH_START, this.onTouchStart, this);\n    }\n\n    onDisable () {\n        systemEvent.off(SystemEventType.TOUCH_START, this.onTouchStart, this);\n    }\n\n    onTouchStart (touch: Touch, event: EventTouch) {\n        this.resetAll();\n\n        this.camera.screenPointToRay(touch.getLocationX(), touch.getLocationY(), this._ray);\n        switch (this._raycastType) {\n            case ERaycastType.ALL:\n                if (PhysicsSystem.instance.raycast(this._ray, this._mask, this._maxDistance)) {\n                    const r = PhysicsSystem.instance.raycastResults;\n                    for (let i = 0; i < r.length; i++) {\n                        const item = r[i];\n                        const modelCom = item.collider.node.getComponent(MeshRenderer)!;\n                        modelCom.material = this.rayMaterial;\n                    }\n                }\n                break;\n            case ERaycastType.CLOSEST:\n                if (PhysicsSystem.instance.raycastClosest(this._ray, this._mask, this._maxDistance)) {\n                    const r = PhysicsSystem.instance.raycastClosestResult;\n                    const modelCom = r.collider.node.getComponent(MeshRenderer)!;\n                    modelCom.material = this.rayMaterial;\n                }\n                break;\n        }\n    }\n\n    resetAll () {\n        for (let i = 0; i < this.node.children.length; i++) {\n            let modelCom = this.node.children[i].getComponent(MeshRenderer)!;\n            modelCom.material = this.defaultMaterial;\n        }\n    }\n\n    onToggle (toggleCom: Toggle) {\n        if (toggleCom.node.name == 'Toggle1') {\n            this._raycastType = ERaycastType.ALL;\n        } else if (toggleCom.node.name == 'Toggle2') {\n            this._raycastType = ERaycastType.CLOSEST;\n        }\n    }\n\n    onEditFinish (editBox: EditBox) {\n        const v = parseFloat(editBox.string);\n        if (!isNaN(v)) {\n            this.maxDistance = v;\n        }\n    }\n\n    onMaskBtn (event: EventTouch) {\n        const lb = (event.target as Node).getComponentInChildren(Label)!;\n        if (this._mask != 0) {\n            this._mask = 0;\n            lb.string = \"检测状态：off\";\n        } else {\n            this._mask = 0xffffffff & ~this.ingnoreLayer;\n            lb.string = \"检测状态：on\";\n        }\n    }\n\n}\n"]}