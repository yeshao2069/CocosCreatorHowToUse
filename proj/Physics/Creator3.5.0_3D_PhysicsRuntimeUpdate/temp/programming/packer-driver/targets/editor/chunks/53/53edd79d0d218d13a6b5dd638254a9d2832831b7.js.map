{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Physics/Creator3.5.0_3D_PhysicsRuntimeUpdate/assets/script/EnumCommand.ts"],"names":["_decorator","Component","Node","isValid","ccclass","property","EnumCommand","type","objNode","v","_objNode","start","props","command","split","lh","that","forEach","e","last","length","i","indexOf","substring","str","index","replace","parseFloat","ss","lf","trim","isNaN","setTimeout","console","log","name","delay","_map","Map"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, isValid } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('EnumCommand')\nexport class EnumCommand extends Component {\n\n    static _map = new Map<string, string[]>();\n\n    set objNode (v: Node) {\n        this._objNode = v;\n    }\n\n    @property({ type: Node })\n    get objNode () {\n        return this._objNode;\n    }\n\n    @property({ type: Node })\n    private _objNode: Node = null as any;\n\n    @property\n    command = '';\n\n    @property\n    delay = 1000;\n\n    start () {\n        const props = this.command.split('.');\n        if (!this._objNode) return;\n        var lh: any = this._objNode;\n        var that = this;\n        props.forEach((e) => {\n            var last = e[e.length - 1];\n            if (last == ']') {\n                var i = e.indexOf('[');\n                lh = lh[e.substring(0, i)];\n                var str = e.substring(i);\n                if (str[0] == '[') {\n                    var index = str.replace('[', '').replace(']', '');\n                    lh = lh[parseFloat(index)];\n                }\n            } else if (last == ';') {\n                const ss = e.split('=');\n                if (ss.length == 2) {\n                    var lf: any = ss[1].trim().split(';')[0]\n                    if (lf == 'false') lf = false;\n                    else if (lf == '{}') lf = {};\n                    else if (lf == '[]') lf = [];\n                    else if (isNaN(lf)) lf = parseFloat(lf);\n                    setTimeout(() => {\n                        if (isValid(lh)) {\n                            console.log(\"[COMMAND]:\", lh.name, ss[0].trim(), lf);\n                            lh[ss[0].trim()] = lf;\n                        }\n                    }, that.delay);\n                }\n            } else {\n                lh = lh[e];\n            }\n        })\n    }\n\n}\n"]}