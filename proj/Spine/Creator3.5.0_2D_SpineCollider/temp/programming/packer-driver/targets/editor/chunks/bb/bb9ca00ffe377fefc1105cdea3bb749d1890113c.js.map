{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Spine/Creator3.5.0_2D_SpineCollider/assets/script/SpineCollider.ts"],"names":["_decorator","Component","PhysicsSystem2D","Contact2DType","Color","Sprite","EPhysics2DDrawFlags","ccclass","SpineCollider","touchingCountMap","Map","debugDrawFlags","start","instance","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","onEnable","Shape","onDisable","addContact","c","count","get","node","set","sprite","getComponent","color","RED","removeContact","delete","WHITE","a","b","console","log"],"mappings":";;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,e,OAAAA,e;AAAiBC,MAAAA,a,OAAAA,a;AAA2BC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;AAA0BC,MAAAA,mB,OAAAA,mB;;;;;;;OAC7G;AAAEC,QAAAA;AAAF,O,GAAcP,U;;+BAGPQ,a,WADZD,OAAO,CAAC,eAAD,C,gBAAR,MACaC,aADb,SACmCP,SADnC,CAC6C;AAAA;AAAA;AAAA,eAEzCQ,gBAFyC,GAEH,IAAIC,GAAJ,EAFG;AAAA,eAIjCC,cAJiC,GAIT,CAJS;AAAA;;AAKzCC,QAAAA,KAAK,GAAI;AACL;AACAV,UAAAA,eAAe,CAACW,QAAhB,CAAyBC,EAAzB,CAA4BX,aAAa,CAACY,aAA1C,EAAyD,KAAKC,cAA9D,EAA8E,IAA9E;AACAd,UAAAA,eAAe,CAACW,QAAhB,CAAyBC,EAAzB,CAA4BX,aAAa,CAACc,WAA1C,EAAuD,KAAKC,YAA5D,EAA0E,IAA1E;AACA,eAAKP,cAAL,GAAsBT,eAAe,CAACW,QAAhB,CAAyBF,cAA/C;AACH;;AAEDQ,QAAAA,QAAQ,GAAI;AACRjB,UAAAA,eAAe,CAACW,QAAhB,CAAyBF,cAAzB,GAA0C,KAAKA,cAAL,GAAsBL,mBAAmB,CAACc,KAApF;AACH;;AACDC,QAAAA,SAAS,GAAI;AACTnB,UAAAA,eAAe,CAACW,QAAhB,CAAyBF,cAAzB,GAA0C,KAAKA,cAA/C;AACH;;AAEDW,QAAAA,UAAU,CAAEC,CAAF,EAAiB;AACvB,cAAIC,KAAK,GAAG,KAAKf,gBAAL,CAAsBgB,GAAtB,CAA0BF,CAAC,CAACG,IAA5B,KAAqC,CAAjD;AACA,eAAKjB,gBAAL,CAAsBkB,GAAtB,CAA0BJ,CAAC,CAACG,IAA5B,EAAkC,EAAEF,KAApC;AAEA,cAAII,MAAM,GAAGL,CAAC,CAACM,YAAF,CAAexB,MAAf,CAAb;;AACA,cAAIuB,MAAJ,EAAY;AACRA,YAAAA,MAAM,CAACE,KAAP,GAAe1B,KAAK,CAAC2B,GAArB;AACH;AACJ;;AAEDC,QAAAA,aAAa,CAAET,CAAF,EAAiB;AAC1B,cAAIC,KAAK,GAAG,KAAKf,gBAAL,CAAsBgB,GAAtB,CAA0BF,CAAC,CAACG,IAA5B,KAAqC,CAAjD;AACA,YAAEF,KAAF;;AACA,cAAIA,KAAK,IAAI,CAAb,EAAgB;AACZ,iBAAKf,gBAAL,CAAsBwB,MAAtB,CAA6BV,CAAC,CAACG,IAA/B;AAEA,gBAAIE,MAAM,GAAGL,CAAC,CAACM,YAAF,CAAexB,MAAf,CAAb;;AACA,gBAAIuB,MAAJ,EAAY;AACRA,cAAAA,MAAM,CAACE,KAAP,GAAe1B,KAAK,CAAC8B,KAArB;AACH;AACJ,WAPD,MAQK;AACD,iBAAKzB,gBAAL,CAAsBkB,GAAtB,CAA0BJ,CAAC,CAACG,IAA5B,EAAkCF,KAAlC;AACH;AACJ;;AAEDR,QAAAA,cAAc,CAAEmB,CAAF,EAAiBC,CAAjB,EAAgC;AAC1C,eAAKd,UAAL,CAAgBa,CAAhB;AACA,eAAKb,UAAL,CAAgBc,CAAhB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAc,iBAAd;AACH;;AAEDpB,QAAAA,YAAY,CAAEiB,CAAF,EAAiBC,CAAjB,EAAgC;AACxC,eAAKJ,aAAL,CAAmBG,CAAnB;AACA,eAAKH,aAAL,CAAmBI,CAAnB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAc,eAAd;AACH;;AAvDwC,O","sourcesContent":["\nimport { _decorator, Component, Node, PhysicsSystem2D, Contact2DType, Collider2D, Color, Sprite, ParticleSystem2D, EPhysics2DDrawFlags } from 'cc';\nconst { ccclass } = _decorator;\n\n@ccclass('SpineCollider')\nexport class SpineCollider extends Component {\n\n    touchingCountMap: Map<Node, number> = new Map;\n\n    private debugDrawFlags:number = 0;\n    start () {\n        // Your initialization goes here.\n        PhysicsSystem2D.instance.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n        PhysicsSystem2D.instance.on(Contact2DType.END_CONTACT, this.onEndContact, this);\n        this.debugDrawFlags = PhysicsSystem2D.instance.debugDrawFlags;\n    }\n\n    onEnable () {\n        PhysicsSystem2D.instance.debugDrawFlags = this.debugDrawFlags | EPhysics2DDrawFlags.Shape;\n    }\n    onDisable () {\n        PhysicsSystem2D.instance.debugDrawFlags = this.debugDrawFlags;\n    }\n\n    addContact (c: Collider2D) {\n        let count = this.touchingCountMap.get(c.node) || 0;\n        this.touchingCountMap.set(c.node, ++count);\n\n        let sprite = c.getComponent(Sprite);\n        if (sprite) {\n            sprite.color = Color.RED;\n        }\n    }\n\n    removeContact (c: Collider2D) {\n        let count = this.touchingCountMap.get(c.node) || 0;\n        --count;\n        if (count <= 0) {\n            this.touchingCountMap.delete(c.node);\n\n            let sprite = c.getComponent(Sprite);\n            if (sprite) {\n                sprite.color = Color.WHITE;\n            }\n        }\n        else {\n            this.touchingCountMap.set(c.node, count);\n        }\n    }\n\n    onBeginContact (a: Collider2D, b: Collider2D) {\n        this.addContact(a);\n        this.addContact(b);\n        console.log(  \"onBeginContact \");\n    }\n\n    onEndContact (a: Collider2D, b: Collider2D) {\n        this.removeContact(a);\n        this.removeContact(b);\n        console.log(  \"onEndContact \");\n    }\n}\n"]}