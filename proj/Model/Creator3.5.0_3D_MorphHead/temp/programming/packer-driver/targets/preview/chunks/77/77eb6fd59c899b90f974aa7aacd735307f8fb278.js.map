{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Model/Creator3.5.0_3D_MorphHead/assets/script/MorphController.ts"],"names":["_decorator","Component","CCFloat","Prefab","instantiate","find","Slider","Label","Layout","EventHandler","MeshRenderer","BYTEDANCE","EDITOR","ccclass","property","executeInEditMode","MorphController","type","range","slide","_weightsControl","_modelComp","_totalTargets","weightsControl","value","length","setWeights","weights","iSubMeshMorph","_morph","subMeshMorphs","start","node","getComponent","mesh","struct","morph","console","warn","firstNonNullSubMeshMorph","subMeshMorph","every","targets","nTargets","Array","fill","cce","Node","emit","Editor","Message","broadcast","uuid","initUI","i","controlItem","controlItemPrfb","parent","itemLayout","nameLabel","string","slider","sliderEventHandler","target","handler","component","customEventData","slideEvents","push","onSliderChanged","log","index","Number","parseInt","progress"],"mappings":"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","sourcesContent":["import { _decorator, Component, CCFloat, Mesh, Prefab, instantiate, find, Slider, Label, Layout, EventHandler, MeshRenderer } from 'cc';\nimport { BYTEDANCE, EDITOR } from 'cc/env';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\ndeclare const cce: any;\n\n@ccclass('MorphController')\n@executeInEditMode\nexport class MorphController extends Component {\n\n    private _weightsControl: number[] = [];\n    private _modelComp: MeshRenderer = null!;\n    private _morph!: NonNullable<Mesh['struct']['morph']>;\n    private _totalTargets: number = 0;\n    @property({type:Prefab})\n    public controlItemPrfb: Prefab = null!;\n    @property({type:Layout})\n    public itemLayout: Layout = null!;\n\n    @property({type:[CCFloat], range:[0, 1, 0.1], slide: true})\n    public get weightsControl() {\n        return this._weightsControl;\n    }\n\n    public set weightsControl(value) {\n        // undo时会每个元素进行数组的一次set，等待fix\n        if (value.length != this._totalTargets) {\n            return;\n        }\n        this._weightsControl = value;\n\n        this.setWeights(this._weightsControl);\n    }\n\n    public setWeights(weights: number[]) {\n        if (weights.length === 0) {\n            return;\n        }\n        for (let iSubMeshMorph = 0; iSubMeshMorph < this._morph.subMeshMorphs.length; ++iSubMeshMorph) {\n            if (this._morph.subMeshMorphs[iSubMeshMorph]) {\n                this._modelComp.setWeights(weights, iSubMeshMorph);\n            }\n        }\n    }\n\n    start () {\n        this._modelComp = this.node.getComponent(MeshRenderer)!;\n        if (!this._modelComp) {\n            return;\n        }\n\n        const mesh = this._modelComp.mesh;\n        if (!mesh) {\n            return;\n        }\n\n        this._morph = mesh.struct.morph!;\n        if (!this._morph) {\n            return;\n        }\n\n        if (this._morph.subMeshMorphs.length === 0) {\n            // TODO submeshcount是0\n            console.warn('submesh count is 0');\n            return;\n        }\n\n        const firstNonNullSubMeshMorph = this._morph.subMeshMorphs.find((subMeshMorph) => !!subMeshMorph);\n        if (!firstNonNullSubMeshMorph) {\n            // TODO 任何 submesh 都没有Morph\n            console.warn(`all submesh don't have morph`)\n            return;\n        }\n\n        if (!this._morph.subMeshMorphs.every((subMeshMorph) => !subMeshMorph || subMeshMorph.targets.length === firstNonNullSubMeshMorph.targets.length)) {\n            // TODO 每个 submesh 的target数量不一样\n            console.warn(`not all submesh count are the same`);\n        }\n        const subMeshMorph = this._morph.subMeshMorphs[0];\n        const nTargets =  subMeshMorph? subMeshMorph.targets.length : 0;\n        this._totalTargets = nTargets;\n        this.weightsControl = new Array(nTargets).fill(0);\n\n\n        if (EDITOR) {\n            cce.Node.emit('change', this.node);\n            // @ts-ignore\n            Editor.Message.broadcast('scene:change-node', this.node.uuid);\n        }\n\n        if (!EDITOR) {\n            this.initUI();\n        }\n    }\n\n    public initUI() {\n        for (let i = 0; i < this._totalTargets; i++) {\n            let controlItem = instantiate(this.controlItemPrfb);\n            controlItem.parent = this.itemLayout.node;\n            let nameLabel = find('Name', controlItem)?.getComponent(Label);\n            if (nameLabel){\n                nameLabel.string = '' + i;\n            }\n\n            let slider = find('Slider', controlItem)?.getComponent(Slider);\n            let sliderEventHandler = new EventHandler();\n            sliderEventHandler.target = this.node;\n            sliderEventHandler.handler = \"onSliderChanged\";\n            sliderEventHandler.component = \"MorphController\";\n            sliderEventHandler.customEventData = ''+i;\n            slider?.slideEvents.push(sliderEventHandler);\n\n        }\n    }\n\n    public onSliderChanged(target: Slider, customEventData: any) {\n        if (!BYTEDANCE) {\n            console.log(target, customEventData);\n        }\n        let index = Number.parseInt(customEventData);\n        this.weightsControl[index] = target.progress;\n        this.weightsControl = this.weightsControl;\n    }\n\n    // update (deltaTime: number) {\n    //     // Your update function goes here.\n    // }\n}\n"]}