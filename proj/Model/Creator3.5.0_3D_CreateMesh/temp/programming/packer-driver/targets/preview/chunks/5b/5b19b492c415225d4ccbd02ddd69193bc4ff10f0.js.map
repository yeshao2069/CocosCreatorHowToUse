{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Model/Creator3.5.0_3D_CreateMesh/assets/EditableGeometry/EditableCube.ts"],"names":["_decorator","Component","utils","primitives","ModelComponent","Vec3","ccclass","property","executeInEditMode","EditableCube","step","model","size","_size","v","rebuildModel","segments","_segments","onLoad","getComponent","addComponent","box","width","x","height","y","length","z","widthSegments","Math","round","heightSegments","lengthSegments","mesh","createMesh","destroy","onDestroy"],"mappings":";;;;;;;;;;;;;;AAMSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,U,OAAAA,U;AAAsBC,MAAAA,c,OAAAA,c;AAAwBC,MAAAA,I,OAAAA,I;;;;;;;OACrF;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA;AAArB,O,GAA2CR,U;;8BAKpCS,Y,WAFZH,OAAO,CAAC,cAAD,C,UAqBHC,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAC;AADE,OAAD,C,gBApBZF,iB,qBADD,MAEaC,YAFb,SAEkCR,SAFlC,CAE4C;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eA4BhCU,KA5BgC;AAAA;;AAKzB,YAAJC,IAAI,GAAU;AACrB,iBAAO,KAAKC,KAAZ;AACH;;AAEc,YAAJD,IAAI,CAACE,CAAD,EAAW;AACtB,eAAKD,KAAL,GAAaC,CAAb;AACA,eAAKC,YAAL;AACH;;AAIkB,YAARC,QAAQ,GAAU;AACzB,iBAAO,KAAKC,SAAZ;AACH;;AAIkB,YAARD,QAAQ,CAACF,CAAD,EAAW;AAC1B,eAAKG,SAAL,GAAiBH,CAAjB;AACA,eAAKC,YAAL;AACH;;AAKDG,QAAAA,MAAM,GAAG;AACL,eAAKP,KAAL,GAAa,KAAKQ,YAAL,CAAkBf,cAAlB,CAAb;;AACA,cAAI,KAAKO,KAAL,IAAc,IAAlB,EAAuB;AACnB,iBAAKA,KAAL,GAAa,KAAKS,YAAL,CAAkBhB,cAAlB,CAAb;AACH;;AAED,eAAKW,YAAL;AAEH;;AAEOA,QAAAA,YAAY,GACpB;AACI,cAAIM,GAAyB,GAAGlB,UAAU,CAACkB,GAAX,CAAe;AAC3CC,YAAAA,KAAK,EAAC,KAAKT,KAAL,CAAWU,CAD0B;AAE3CC,YAAAA,MAAM,EAAC,KAAKX,KAAL,CAAWY,CAFyB;AAG3CC,YAAAA,MAAM,EAAC,KAAKb,KAAL,CAAWc,CAHyB;AAI3CC,YAAAA,aAAa,EAACC,IAAI,CAACC,KAAL,CAAW,KAAKb,SAAL,CAAeM,CAA1B,CAJ6B;AAK3CQ,YAAAA,cAAc,EAACF,IAAI,CAACC,KAAL,CAAW,KAAKb,SAAL,CAAeQ,CAA1B,CAL4B;AAM3CO,YAAAA,cAAc,EAACH,IAAI,CAACC,KAAL,CAAW,KAAKb,SAAL,CAAeU,CAA1B;AAN4B,WAAf,CAAhC;AASA,cAAIM,IAAI,GAAG/B,KAAK,CAACgC,UAAN,CAAiBb,GAAjB,CAAX;AACA,cAAI,KAAKV,KAAL,CAAWsB,IAAf,EAAqB,KAAKtB,KAAL,CAAWsB,IAAX,CAAgBE,OAAhB;AACrB,eAAKxB,KAAL,CAAWsB,IAAX,GAAkBA,IAAlB;AACH;;AAEDG,QAAAA,SAAS,GAAG;AACR,cAAI,KAAKzB,KAAL,CAAWsB,IAAf,EAAqB;AACjB,iBAAKtB,KAAL,CAAWsB,IAAX,CAAgBE,OAAhB;AACA,iBAAKxB,KAAL,CAAWsB,IAAX,GAAkB,IAAlB;AACH;AACJ;;AA7DuC,O,wEAGvC1B,Q;;;;;iBACsB,IAAIF,IAAJ,CAAS,CAAT,EAAW,CAAX,EAAa,CAAb,C;;gEAItBE,Q,6JAMAA,Q;;;;;iBAC0B,IAAIF,IAAJ,CAAS,CAAT,EAAW,CAAX,EAAa,CAAb,C","sourcesContent":["/*\r\n * @Author: wss \r\n * @Date: 2020-04-04 20:00:39 \r\n * @Last Modified by:   wss \r\n * @Last Modified time: 2020-04-04 20:00:39 \r\n */\r\nimport { _decorator, Component, Node, utils, primitives, geometry, ModelComponent, CCFloat,Vec3, Material} from \"cc\";\r\nconst { ccclass, property, executeInEditMode } = _decorator;\r\n\r\n\r\n@ccclass(\"EditableCube\")\r\n@executeInEditMode\r\nexport class EditableCube extends Component {\r\n    \r\n\r\n    @property\r\n    private _size : Vec3 = new Vec3(1,1,1);\r\n    public get size() : Vec3 {\r\n        return this._size;\r\n    }\r\n    @property\r\n    public set size(v : Vec3) {\r\n        this._size = v;\r\n        this.rebuildModel();\r\n    }\r\n\r\n    @property\r\n    private _segments : Vec3 = new Vec3(1,1,1);\r\n    public get segments() : Vec3 {\r\n        return this._segments;\r\n    }\r\n    @property({\r\n       step:1\r\n    })\r\n    public set segments(v : Vec3) {\r\n        this._segments = v;\r\n        this.rebuildModel();\r\n    }\r\n    \r\n    \r\n    private model:ModelComponent;\r\n\r\n    onLoad() {\r\n        this.model = this.getComponent(ModelComponent);\r\n        if (this.model == null){\r\n            this.model = this.addComponent(ModelComponent);\r\n        }\r\n\r\n        this.rebuildModel();\r\n\r\n    }\r\n\r\n    private rebuildModel()\r\n    {\r\n        let box: primitives.IGeometry = primitives.box({\r\n            width:this._size.x,\r\n            height:this._size.y,\r\n            length:this._size.z,\r\n            widthSegments:Math.round(this._segments.x),\r\n            heightSegments:Math.round(this._segments.y),\r\n            lengthSegments:Math.round(this._segments.z)\r\n        });\r\n\r\n        let mesh = utils.createMesh(box);\r\n        if (this.model.mesh) this.model.mesh.destroy();\r\n        this.model.mesh = mesh;\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this.model.mesh) {\r\n            this.model.mesh.destroy();\r\n            this.model.mesh = null;\r\n        }\r\n    }\r\n}\r\n"]}