{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Demo/Creator3.5.0_2D_AbovePointTest/assets/AbovePointTest.ts"],"names":["_decorator","Component","Vec3","Size","Graphics","Color","ccclass","property","Typescript","start","normalTest","rotateTest","rectPos","size","a","x","width","y","height","b","c","d","drawRect","point1","point2","point3","drawPoint","console","log","p1Res","rectangleContainPoint","p2Res","p3Res","angle","radius","Math","PI","getSin","parseFloat","sin","toFixed","getCos","cos","_ax","_ay","set","_bx","_by","_cx","_cy","_dx","_dy","rectangleContainPointExt","targetPos","rectSize","leftX","rightX","topY","bottomY","isContain","tPosX","tPosY","xOld","yOld","aPos","bPos","cPos","dPos","dColor","BLACK","g","node","getChildByName","getComponent","lineWidth","strokeColor","moveTo","lineTo","stroke","fillColor","fromHEX","circle","fill"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Vec3, Size, rect, Graphics, Rect, size, Vec2, Color } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Typescript')\nexport class Typescript extends Component {\n\n    start () {\n        this.normalTest(); // 普通测试\n        this.rotateTest(); // 旋转测试\n    }\n\n    normalTest () {\n        // 绘制方块\n        let rectPos = new Vec3(-250, 0, 0);\n        let size = new Size(200, 200);\n        let a = new Vec3(rectPos.x + size.width/2, rectPos.y + size.height/2, 0);\n        let b = new Vec3(rectPos.x - size.width/2, rectPos.y + size.height/2, 0);\n        let c = new Vec3(rectPos.x - size.width/2, rectPos.y - size.height/2, 0);\n        let d = new Vec3(rectPos.x + size.width/2, rectPos.y - size.height/2, 0);\n        this.drawRect(a, b, c, d);\n        // 绘制测试点\n        let point1 = new Vec3(-200, 100, 0);\n        let point2 = new Vec3(-205, 6, 7);\n        let point3 = new Vec3(-400, 0, 0);\n        this.drawPoint(point1);\n        this.drawPoint(point2);\n        this.drawPoint(point3);\n\n        console.log(\" ------  normal test  -------\");\n        let p1Res = this.rectangleContainPoint(point1, size, rectPos);\n        console.log('point1 pos->',point1, 'is Contain Result ->', p1Res);\n\n        let p2Res = this.rectangleContainPoint(point2, size, rectPos);\n        console.log('point2 pos->',point2, 'is Contain Result ->', p2Res);\n\n        let p3Res = this.rectangleContainPoint(point3, size, rectPos);\n        console.log('point3 pos->',point3, 'is Contain Result ->', p3Res);\n    }\n\n    rotateTest () {\n        // 绘制方块\n        let rectPos = new Vec3(250, 0, 0);\n        let size = new Size(200, 200);\n        let angle = 45;\n\n        let radius = Math.PI / 180 * (angle);\n        let getSin = parseFloat(Math.sin(radius).toFixed(3));\n        let getCos = parseFloat(Math.cos(radius).toFixed(3));\n\n        let a = new Vec3(rectPos.x + size.width/2, rectPos.y + size.height/2, 0);\n        let b = new Vec3(rectPos.x - size.width/2, rectPos.y + size.height/2, 0);\n        let c = new Vec3(rectPos.x - size.width/2, rectPos.y - size.height/2, 0);\n        let d = new Vec3(rectPos.x + size.width/2, rectPos.y - size.height/2, 0);\n        // 旋转前\n        this.drawRect(a, b, c, d, new Color(100,100,100));\n\n        let _ax = (a.x - rectPos.x) * getCos - (a.y - rectPos.y) * getSin + rectPos.x;\n        let _ay = (a.y - rectPos.y) * getCos + (a.x - rectPos.x) * getSin + rectPos.y;\n        a.set(_ax, _ay, 0);\n        let _bx = (b.x - rectPos.x) * getCos - (b.y - rectPos.y) * getSin + rectPos.x;\n        let _by = (b.y - rectPos.y) * getCos + (b.x - rectPos.x) * getSin + rectPos.y;\n        b.set(_bx, _by, 0);\n        let _cx = (c.x - rectPos.x) * getCos - (c.y - rectPos.y) * getSin + rectPos.x;\n        let _cy = (c.y - rectPos.y) * getCos + (c.x - rectPos.x) * getSin + rectPos.y;\n        c.set(_cx, _cy, 0);\n        let _dx = (d.x - rectPos.x) * getCos - (d.y - rectPos.y) * getSin + rectPos.x;\n        let _dy = (d.y - rectPos.y) * getCos + (d.x - rectPos.x) * getSin + rectPos.y;\n        d.set(_dx, _dy, 0);\n\n        this.drawRect(a, b, c, d);\n        // 绘制测试点\n        let point1 = new Vec3(300, 20, 0);\n        let point2 = new Vec3(250, 0, 0);\n        let point3 = new Vec3(400, 0, 0);\n        this.drawPoint(point1);\n        this.drawPoint(point2);\n        this.drawPoint(point3);\n\n        console.log(\" ------  rotate test  -------\");\n        let p1Res = this.rectangleContainPointExt(point1, angle, size, rectPos);\n        console.log('point1 pos->',point1, 'is Contain Result ->', p1Res);\n\n        let p2Res = this.rectangleContainPointExt(point2, angle, size, rectPos);\n        console.log('point2 pos->',point2, 'is Contain Result ->', p2Res);\n\n        let p3Res = this.rectangleContainPointExt(point3, angle, size, rectPos);\n        console.log('point3 pos->',point3, 'is Contain Result ->', p3Res);\n    }\n\n    /**\n     * \n     * 检测矩形是否包含某个点\n     * @param rectSize 矩形尺寸 宽&高\n     * @param targetPos 目标点的坐标\n     * @param rectPos 矩形的坐标\n     * @return boolean 返回是否包含的boolean\n     */\n    rectangleContainPoint(targetPos: Vec3, rectSize: Size = new Size(), rectPos: Vec3 = new Vec3()) : boolean {\n        // 计算边界值\n        let leftX = rectPos.x - rectSize.width / 2; \n        let rightX = rectPos.x + rectSize.width / 2;\n        let topY = rectPos.y + rectSize.height / 2;\n        let bottomY = rectPos.y - rectSize.height / 2;\n\n        let isContain = false; // 是否包含标志\n        let tPosX = targetPos.x;\n        let tPosY = targetPos.y;\n\n        if(tPosX <= rightX && tPosX >= leftX && tPosY <= topY && tPosY >= bottomY) {\n            isContain = true;\n        }\n\n        return isContain;\n    }\n\n    /**\n     * \n     * 检测矩形是否包含某个点(扩展1)\n     * @param targetPos 目标点的坐标\n     * @param angle 矩形的旋转角度\n     * @param rectSize 矩形尺寸 宽&高\n     * @param rectPos 矩形的坐标\n     * @return boolean 返回是否包含的boolean\n     */\n    rectangleContainPointExt(targetPos: Vec3, angle: number, rectSize: Size = new Size(), rectPos: Vec3 = new Vec3()) : boolean {\n        // 计算边界值\n        let leftX = rectPos.x - rectSize.width / 2; \n        let rightX = rectPos.x + rectSize.width / 2;\n        let topY = rectPos.y + rectSize.height / 2;\n        let bottomY = rectPos.y - rectSize.height / 2;\n\n        let isContain = false; // 是否包含标志\n        let tPosX = targetPos.x;\n        let tPosY = targetPos.y;\n\n        // 获取旋转后的坐标\n        // b.x = a.x*cos(angle) - a.y*sin(angle)\n        // b.y = a.x*sin(angle) + a.y*cos(angle)\n\n        // 平面上一点x1,y1,绕平面上另一点x2,y2顺时针旋转θ角度 ，怎么求旋转后的x1,y1对应的坐标x，y\n        // x=(x1-x2)cosθ-(y1-y2)sinθ+x2\n        // y=(y1-y2)cosθ+(x1-x2)sinθ+y2\n\n        let radius = Math.PI / 180 * (-angle);\n        let getSin = parseFloat(Math.sin(radius).toFixed(3));\n        let getCos = parseFloat(Math.cos(radius).toFixed(3));\n        // console.log(getSin,getCos);\n        let xOld = (tPosX - rectPos.x) * getCos - (tPosY - rectPos.y) * getSin + rectPos.x;\n        let yOld = (tPosY - rectPos.y) * getCos + (tPosX - rectPos.x) * getSin + rectPos.y;\n\n        // 思路: 将旋转的矩形转换成旋转前(angle=0°时)的矩形，然后把需要判断的节点也转换成旋转前的节点然后进行判断\n        if(xOld <= rightX && xOld >= leftX && yOld <= topY && yOld >= bottomY) {\n            isContain = true;\n        }\n\n        return isContain;\n    }\n\n    /**\n     * 绘制方块\n     * @param aPos 方块节点坐标\n     * @param bPos 方块节点坐标\n     * @param cPos 方块节点坐标\n     * @param dPos 方块节点坐标\n     * @param dColor 绘制颜色\n     */\n    drawRect (aPos: Vec3, bPos: Vec3, cPos: Vec3, dPos: Vec3, dColor: Color = Color.BLACK) {\n        const g = this.node.getChildByName('draw')!.getComponent(Graphics)!;\n\n        g.lineWidth = 5;\n        // g.strokeColor.fromHEX('#000000');\n        g.strokeColor.set(dColor);\n\n        g.moveTo(aPos.x, aPos.y);\n        g.lineTo(bPos.x, bPos.y);\n        g.lineTo(cPos.x, cPos.y);\n        g.lineTo(dPos.x, dPos.y);\n        g.lineTo(aPos.x, aPos.y);\n\n        g.stroke();\n    }\n\n    /**\n     * 绘制点\n     * @param aPos 点坐标\n     * @param radius 点大小\n     */\n    drawPoint (aPos: Vec3, radius: number = 5){\n        const g = this.node.getChildByName('draw')!.getComponent(Graphics)!;\n\n        g.lineWidth = 5;\n        g.fillColor.fromHEX('#FF0000');\n        g.strokeColor.fromHEX('#FF0000');\n        g.circle(aPos.x, aPos.y, radius);\n        g.stroke();\n        g.fill();\n    }\n}\n"]}