{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Demo/Creator3.5.0_2D_CircularProgressBar/assets/CircularProgressBar.ts"],"names":["_decorator","Component","ProgressBar","tween","Sprite","ccclass","property","CircularProgressBar","start","i","node","getChildByName","pb","getComponent","time","Math","floor","random","repeatForever","to","progress","call","sp","fillRange"],"mappings":";;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;;;;;;;OACpD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;qCAGjBO,mB,WADZF,OAAO,CAAC,qBAAD,C,gBAAR,MACaE,mBADb,SACyCN,SADzC,CACmD;AAG/CO,QAAAA,KAAK,GAAI;AAEL;AACA,eAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAE,CAAjB,EAAoBA,CAAC,EAArB,EAAyB;AACrB,gBAAIC,IAAI,GAAG,KAAKA,IAAL,CAAUC,cAAV,CAAyB,WAASF,CAAlC,CAAX;;AACA,gBAAIC,IAAJ,EAAU;AACN,kBAAIE,EAAE,GAAGF,IAAI,CAACG,YAAL,CAAkBX,WAAlB,CAAT;AACA,kBAAIY,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAA5C;AACAd,cAAAA,KAAK,CAACS,EAAD,CAAL,CAAUM,aAAV,CACIf,KAAK,CAACS,EAAD,CAAL,CAAUO,EAAV,CAAaL,IAAb,EAAmB;AAAEM,gBAAAA,QAAQ,EAAE;AAAZ,eAAnB,EAAmCC,IAAnC,CAAwC,MAAI;AACxCT,gBAAAA,EAAE,CAACQ,QAAH,GAAc,CAAd;AACH,eAFD,CADJ,EAIEZ,KAJF;AAKH;AACJ,WAdI,CAgBL;AAGA;;;AACA,eAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAE,CAAjB,EAAoBA,CAAC,EAArB,EAAyB;AACrB,gBAAIC,IAAI,GAAG,KAAKA,IAAL,CAAUC,cAAV,CAAyB,WAASF,CAAlC,CAAX;;AACA,gBAAIC,IAAJ,EAAU;AACN,kBAAIY,EAAE,GAAGZ,IAAI,CAACC,cAAL,CAAoB,UAApB,EAAiCE,YAAjC,CAA8CT,MAA9C,CAAT;AACA,kBAAIU,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAA5C;AACAd,cAAAA,KAAK,CAACmB,EAAD,CAAL,CAAUJ,aAAV,CACIf,KAAK,CAACmB,EAAD,CAAL,CAAUH,EAAV,CAAaL,IAAb,EAAmB;AAAES,gBAAAA,SAAS,EAAE,CAAC;AAAd,eAAnB,EAAqCF,IAArC,CAA0C,MAAI;AAC1CC,gBAAAA,EAAE,CAACC,SAAH,GAAe,CAAf;AACH,eAFD,CADJ,EAIEf,KAJF;AAKH;AACJ;AACJ;;AAnC8C,O","sourcesContent":["\nimport { _decorator, Component, Node, ProgressBar, tween, Sprite } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('CircularProgressBar')\nexport class CircularProgressBar extends Component {\n\n\n    start () {\n\n        // 使用ProgressBar方式\n        for (let i=1; i <5; i++) {\n            let node = this.node.getChildByName('pbNode'+i);\n            if (node) {\n                let pb = node.getComponent(ProgressBar)!;\n                let time = Math.floor(Math.random() * 10) + 1;\n                tween(pb).repeatForever(\n                    tween(pb).to(time, { progress: 1}).call(()=>{\n                        pb.progress = 0;\n                    })\n                ).start();\n            }\n        }\n\n        // 使用动画 Animation 方式\n\n\n        // 使用ProgressBar方式\n        for (let i=1; i <5; i++) {\n            let node = this.node.getChildByName('spNode'+i);\n            if (node) {\n                let sp = node.getChildByName('progress')!.getComponent(Sprite)!;\n                let time = Math.floor(Math.random() * 10) + 1;\n                tween(sp).repeatForever(\n                    tween(sp).to(time, { fillRange: -1}).call(()=>{\n                        sp.fillRange = 0;\n                    })\n                ).start();\n            }\n        }\n    }\n}\n"]}