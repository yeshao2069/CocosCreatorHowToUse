{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Demo/Creator3.5.0_2D_AdaptiveRotation/assets/AdaptiveRotation2D.ts"],"names":["_decorator","Component","Node","SystemEvent","tween","Vec2","Vec3","UITransform","ccclass","property","AdaptiveRotation2D","onLoad","node","on","EventType","MOUSE_DOWN","onMouseDown","evt","tmpVec3","getUILocation","x","y","pos1","getComponent","convertToNodeSpaceAR","angle","getAngle","tank","position","console","log","tmpAngle","sequence","to","call","start","oldPos","nowPos","dir","signAngle","Math","PI","abs"],"mappings":";;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;AAAyBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;;;;;;;OAC5E;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;oCAGjBU,kB,WADZF,OAAO,CAAC,oBAAD,C,UAGHC,QAAQ,CAACP,IAAD,C,2BAHb,MACaQ,kBADb,SACwCT,SADxC,CACkD;AAAA;AAAA;;AAAA;AAAA;;AAK9CU,QAAAA,MAAM,GAAI;AACN,eAAKC,IAAL,CAAUC,EAAV,CAAaV,WAAW,CAACW,SAAZ,CAAsBC,UAAnC,EAA+C,KAAKC,WAApD,EAAiE,IAAjE;AACH;;AAEDA,QAAAA,WAAW,CAAEC,GAAF,EAAmB;AAC1B,cAAIC,OAAO,GAAG,IAAIZ,IAAJ,CAASW,GAAG,CAACE,aAAJ,GAAoBC,CAA7B,EAAgCH,GAAG,CAACE,aAAJ,GAAoBE,CAApD,EAAuD,CAAvD,CAAd;AACA,cAAIC,IAAI,GAAG,KAAKV,IAAL,CAAUW,YAAV,CAAuBhB,WAAvB,EAAqCiB,oBAArC,CAA0DN,OAA1D,CAAX;AACA,cAAIO,KAAK,GAAG,KAAKC,QAAL,CAAc,KAAKC,IAAL,CAAUC,QAAxB,EAAkCN,IAAlC,CAAZ;AAEAO,UAAAA,OAAO,CAACC,GAAR,CAAa,KAAKH,IAAL,CAAUF,KAAvB,EAA8BA,KAA9B;AACA,cAAIM,QAAQ,GAAGN,KAAf;;AACA,cAAI,KAAKE,IAAL,CAAUF,KAAV,IAAmB,EAAnB,IAAyBA,KAAK,IAAI,CAAC,EAAvC,EAA2C;AACvCM,YAAAA,QAAQ,GAAGN,KAAX;AACAA,YAAAA,KAAK,GAAGA,KAAK,GAAG,GAAhB;AACH;;AACD,cAAI,KAAKE,IAAL,CAAUF,KAAV,IAAmB,CAAC,EAApB,IAA0BA,KAAK,IAAI,EAAvC,EAA2C;AACvCM,YAAAA,QAAQ,GAAGN,KAAX;AACAA,YAAAA,KAAK,GAAGA,KAAK,GAAG,GAAhB;AACH;;AAEDrB,UAAAA,KAAK,CAAC,KAAKuB,IAAN,CAAL,CACKK,QADL,CAEQ5B,KAAK,CAAC,KAAKuB,IAAN,CAAL,CAAiBM,EAAjB,CAAoB,GAApB,EAAyB;AAACR,YAAAA,KAAK,EAAEA;AAAR,WAAzB,CAFR,EAGQrB,KAAK,CAAC,KAAKuB,IAAN,CAAL,CAAiBO,IAAjB,CAAsB,MAAI;AACtB;AACA,iBAAKP,IAAL,CAAUF,KAAV,GAAkBM,QAAlB;AACH,WAHD,CAHR,EAQKI,KARL;AASH;;AAEDT,QAAAA,QAAQ,CAAEU,MAAF,EAAgBC,MAAhB,EAA8B;AAClC,cAAIC,GAAG,GAAG,IAAIjC,IAAJ,CAASgC,MAAM,CAACjB,CAAP,GAAWgB,MAAM,CAAChB,CAA3B,EAA8BiB,MAAM,CAAChB,CAAP,GAAWe,MAAM,CAACf,CAAhD,CAAV;AACA,cAAII,KAAK,GAAGa,GAAG,CAACC,SAAJ,CAAc,IAAIlC,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAd,CAAZ;AACAoB,UAAAA,KAAK,GAAGA,KAAK,GAAG,GAAR,GAAce,IAAI,CAACC,EAA3B;AACAhB,UAAAA,KAAK,GAAIA,KAAK,GAAC,CAAN,GAAU,CAACA,KAAX,GAAmBe,IAAI,CAACE,GAAL,CAASjB,KAAT,CAA5B;AACA,iBAAOA,KAAP;AACH;;AA1C6C,O","sourcesContent":["\nimport { _decorator, Component, Node, SystemEvent, EventTouch, tween, Vec2, Vec3, UITransform } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('AdaptiveRotation2D')\nexport class AdaptiveRotation2D extends Component {\n\n    @property(Node)\n    tank !: Node;\n\n    onLoad () {\n        this.node.on(SystemEvent.EventType.MOUSE_DOWN, this.onMouseDown, this);\n    }\n\n    onMouseDown (evt: EventTouch) {\n        let tmpVec3 = new Vec3(evt.getUILocation().x, evt.getUILocation().y, 0);\n        let pos1 = this.node.getComponent(UITransform)!.convertToNodeSpaceAR(tmpVec3);\n        let angle = this.getAngle(this.tank.position, pos1);\n\n        console.log( this.tank.angle, angle);\n        let tmpAngle = angle;\n        if (this.tank.angle >= 90 && angle <= -90) {\n            tmpAngle = angle;\n            angle = angle + 360;\n        }\n        if (this.tank.angle <= -90 && angle >= 90) {\n            tmpAngle = angle;\n            angle = angle - 360;\n        }\n\n        tween(this.tank)\n            .sequence(\n                tween(this.tank).to(0.5, {angle: angle}),\n                tween(this.tank).call(()=>{\n                    // 做矫正\n                    this.tank.angle = tmpAngle;\n                }),\n            )\n            .start()\n    }\n\n    getAngle (oldPos: Vec3, nowPos: Vec3) {\n        let dir = new Vec2(nowPos.x - oldPos.x, nowPos.y - oldPos.y)\n        let angle = dir.signAngle(new Vec2(0, 1))\n        angle = angle * 180 / Math.PI;\n        angle = (angle>0 ? -angle : Math.abs(angle))\n        return angle\n    }\n}\n\n"]}