{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Demo/Creator3.5.1_3D_ObjectAlwaysFollow/assets/script/ObjectAlwaysFollow.ts"],"names":["_decorator","Component","Node","Vec3","tween","Quat","KeyCode","input","Input","ccclass","property","ObjectAlwaysFollow","soldierRotate","tempQuat","start","on","EventType","KEY_UP","onKeyUPEvent","evt","quat","soldier","getRotation","getEulerAngles","keyCode","ARROW_LEFT","y","fromEuler","x","z","stop","call","setRotation","to","rotation","rotateAroundNode","follower","position","UP","ARROW_RIGHT","console","log","self","targetPos","axis","angle","_quat","v1","v2","pos2","rad","Math","PI","fromAxisAngle","subtract","transformQuat","add","setPosition","rotateAround"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, EventKeyboard, Vec3, tween, Quat, KeyCode, input, Input } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ObjectAlwaysFollow')\nexport class ObjectAlwaysFollow extends Component {\n    @property(Node)\n    soldier !: Node;\n\n    @property(Node)\n    follower !: Node;\n\n    soldierRotate = new Vec3();\n    tempQuat = new Quat();\n\n    start () {\n        input.on(Input.EventType.KEY_UP, this.onKeyUPEvent, this);\n    }\n\n    onKeyUPEvent (evt: EventKeyboard) {\n        let quat = this.soldier.getRotation();\n        quat.getEulerAngles(this.soldierRotate);\n\n        switch(evt.keyCode) {\n            case KeyCode.ARROW_LEFT :\n                this.soldierRotate.y += 10;\n                /* 这边需要特殊处理的情况是\n                 * 四元素从 rotateY:180-190, 做旋转的时候会出现问题。这边做了规避操作。\n                 * 同理， rotateY: -180~-190, 做旋转的时候也会出现问题，此处规避。\n                 */\n                if (this.soldierRotate.y > 180 ) {\n                    this.soldierRotate.y -= 360;\n\n                    Quat.fromEuler(quat, this.soldierRotate.x, this.soldierRotate.y, this.soldierRotate.z);\n                    Quat.fromEuler(this.tempQuat, this.soldierRotate.x, -180, this.soldierRotate.z);\n                    tween(this.soldier).stop();\n                    tween(this.soldier).call(()=>{\n                        this.soldier.setRotation(this.tempQuat);\n                    })\n                    .to(0.15, { rotation: quat })\n                    .call(()=>{\n                        this.rotateAroundNode(this.follower, this.soldier.position, Vec3.UP, 10);\n                    }).start();\n                } else {\n                    Quat.fromEuler(quat, this.soldierRotate.x, this.soldierRotate.y, this.soldierRotate.z);\n                    tween(this.soldier).stop();\n                    tween(this.soldier).to(0.15, { rotation: quat })\n                    .call(()=>{\n                        this.rotateAroundNode(this.follower, this.soldier.position, Vec3.UP, 10);\n                    }).start();\n                }\n                \n                break;\n            case KeyCode.ARROW_RIGHT :\n                this.soldierRotate.y -= 10;\n                console.log(this.soldierRotate);\n\n                if (this.soldierRotate.y < -180) {\n                    this.soldierRotate.y += 360;\n\n                    Quat.fromEuler(quat, this.soldierRotate.x, this.soldierRotate.y, this.soldierRotate.z);\n                    Quat.fromEuler(this.tempQuat, this.soldierRotate.x, 180, this.soldierRotate.z);\n                    tween(this.soldier).stop();\n                    tween(this.soldier).call(()=>{\n                        this.soldier.setRotation(this.tempQuat);\n                    })\n                    .to(0.15, { rotation: quat })\n                    .call(()=>{\n                        this.rotateAroundNode(this.follower, this.soldier.position, Vec3.UP, -10);\n                    }).start();\n                } else {\n                    Quat.fromEuler(quat, this.soldierRotate.x, this.soldierRotate.y, this.soldierRotate.z);\n                    tween(this.soldier).stop();\n                    tween(this.soldier).to(0.15, { rotation: quat })\n                    .call(()=>{\n                        this.rotateAroundNode(this.follower, this.soldier.position, Vec3.UP, -10);\n                    }).start();\n                }\n                \n                break;\n        }\n    }\n\n    rotateAroundNode(self: Node, targetPos: Vec3, axis: Vec3, angle: number) : Quat {\n        let _quat = new Quat();\n        const v1 = new Vec3();\n        const v2 = new Vec3();\n        let pos2 : Vec3 = self.position;\n        let rad = angle / 180 * Math.PI;\n\n        //根据旋转轴和旋转弧度计算四元数\n        Quat.fromAxisAngle(_quat, axis, rad);\n        //相减，目标点与相机点之间的向量\n        Vec3.subtract(v1, pos2, targetPos);\n        //把向量dir根据计算到的四元数旋转，然后计算出旋转后的距离\n        Vec3.transformQuat(v2, v1, _quat);\n        Vec3.add(v2, targetPos, v2);\n        self.setPosition(v2);\n        //根据轴和弧度绕世界空间下指定轴旋转四元数\n        Quat.rotateAround(_quat, self.rotation, axis, rad);\n        return _quat;\n    }\n} "]}