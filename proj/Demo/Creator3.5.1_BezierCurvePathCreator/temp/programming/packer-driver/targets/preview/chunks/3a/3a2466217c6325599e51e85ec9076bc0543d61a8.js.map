{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/Demo/Creator3.5.1_BezierCurvePathCreator/assets/scripts/EventListener.ts"],"names":["_decorator","ccclass","property","EventListener","handlers","on","eventType","method","push","emit","data","i","len","length","call","off","handler","splice"],"mappings":";;;;;;;;AAASA,MAAAA,U,OAAAA,U;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBF,U;;+BAGjBG,a,WADZF,OAAO,CAAC,eAAD,C,gBAAR,MACaE,aADb,CAC2B;AAAA;AAAA,eAEvBC,QAFuB,GAEN,EAFM;AAAA;;AAGvB;AACAC,QAAAA,EAAE,CAAEC,SAAF,EAA8BC,MAA9B,EAA2C;AACzC,eAAKH,QAAL,CAAcE,SAAd,IAA2B,KAAKF,QAAL,CAAcE,SAAd,KAA4B,EAAvD;AACA,eAAKF,QAAL,CAAcE,SAAd,EAAyBE,IAAzB,CAA8BD,MAA9B;AACH;;AAED;AACAE,QAAAA,IAAI,CAAEH,SAAF,EAA8BI,IAA9B,EAAyC;AACzC,cAAI,CAAC,KAAKN,QAAL,CAAcE,SAAd,CAAL,EAA+B;AAC3B;AACH;;AACD,eAAK,IAAIK,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,KAAKR,QAAL,CAAcE,SAAd,EAAyBO,MAA/C,EAAuDF,CAAC,GAAGC,GAA3D,EAAgED,CAAC,EAAjE,EAAqE;AACjE,iBAAKP,QAAL,CAAcE,SAAd,EAAyBK,CAAzB,EAA4BG,IAA5B,CAAiC,IAAjC,EAAuCJ,IAAvC;AACH;AACJ;;AAED;AACAK,QAAAA,GAAG,CAAET,SAAF,EAA8BC,MAA9B,EAA2C;AAC1C,cAAIS,OAAO,GAAG,KAAKZ,QAAL,CAAcE,SAAd,CAAd;;AACA,eAAK,IAAIK,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGI,OAAO,CAACH,MAA9B,EAAsCF,CAAC,GAAGC,GAA1C,EAA+CD,CAAC,EAAhD,EAAoD;AAChD,gBAAIK,OAAO,CAACL,CAAD,CAAP,KAAeJ,MAAnB,EAA2B;AACvBS,cAAAA,OAAO,CAACC,MAAR,CAAeN,CAAf,EAAkB,CAAlB;AACH;AACJ;AACJ;;AA3BsB,O","sourcesContent":["import { _decorator } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('EventListener')\nexport class EventListener {\n\n    handlers : any = {};\n    // 订阅事件\n    on (eventType: string | number, method: any) {\n        this.handlers[eventType] = this.handlers[eventType] || [];\n        this.handlers[eventType].push(method);\n    };\n\n    // 触发事件(发布事件)\n    emit (eventType: string | number, data: any) {\n        if (!this.handlers[eventType]) {\n            return\n        }\n        for (var i = 0, len = this.handlers[eventType].length; i < len; i++) {\n            this.handlers[eventType][i].call(null, data)\n        }\n    };\n\n    // 删除订阅事件\n    off (eventType: string | number, method: any) {\n        let handler = this.handlers[eventType];\n        for (var i = 0, len = handler.length; i < len; i++) {\n            if (handler[i] === method) {\n                handler.splice(i, 1);\n            }\n        }\n    }\n}\n"]}