{"version":3,"sources":["file:///Users/mu/work/gitee/cocos-creator-how-to-use/proj/UI/Creator3.5.0_2D_ListViewUse/assets/ListViewUse.ts"],"names":["_decorator","Component","Node","ScrollView","Label","Button","instantiate","error","UITransform","Vec3","CCFloat","Item","ccclass","property","ListViewUse","items","updateTimer","updateInterval","lastContentPosY","onLoad","content","scrollview","initialize","getComponent","height","totalCount","itemTemplate","spacing","i","spawnCount","item","addChild","setPosition","initItem","push","getPositionInView","worldPos","parent","convertToWorldSpaceAR","position","viewPos","node","convertToNodeSpaceAR","update","dt","buffer","bufferZone","isDown","getPosition","y","offset","length","pos","itemId","itemID","updateItem","lblTotalItems","string","scrollEvent","sender","event","lblScrollEvent","addItem","removeItem","moveBottomItemToTop","getItemAtBottom","itemComp","scrollToFixedPosition","scrollToOffset"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, ScrollView, Label, Button, instantiate,\n    error, UITransform, Vec3, CCFloat } from 'cc';\nimport { Item } from './Item';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ListViewUse')\nexport class ListViewUse extends Component {\n    \n    @property(Node)\n    itemTemplate !: Node;\n    @property(ScrollView)\n    scrollview !: ScrollView;\n    @property(CCFloat)\n    spawnCount: number = 0; // how many items we actually spawn\n    @property(CCFloat)\n    totalCount: number = 0; // how many items we need for the whole list\n    @property(CCFloat)\n    spacing: number = 0; // space between each item\n    @property(CCFloat)\n    bufferZone: number = 0; // when item is away from bufferZone, we relocate it\n    @property(Label)\n    lblScrollEvent !: Label;\n    @property(Button)\n    btnAddItem !: Button;\n    @property(Button)\n    btnRemoveItem !: Button;\n    @property(Button)\n    btnJumpToPosition !: Button;\n    @property(Label)\n    lblJumpPosition !: Label;\n    @property(Label)\n    lblTotalItems !: Label;\n    \n    content !: Node;\n    items: Node[] = [];\n    updateTimer: number = 0;\n    updateInterval: number = 0;\n    lastContentPosY: number = 0;\n\n    onLoad () {\n    \tthis.content = this.scrollview.content!;\n        this.items = []; // array to store spawned items\n    \tthis.initialize();\n        this.updateTimer = 0;\n        this.updateInterval = 0.2;\n        this.lastContentPosY = 0; // use this variable to detect if we are scrolling up or down\n    }\n\n    initialize () {\n        this.content.getComponent(UITransform)!.height = this.totalCount * (this.itemTemplate.getComponent(UITransform)!.height + this.spacing) + this.spacing; // get total content height\n    \tfor (let i = 0; i < this.spawnCount; ++i) { // spawn items, we only need to do this once\n    \t\tlet item = instantiate(this.itemTemplate);\n    \t\tthis.content.addChild(item);\n    \t\titem.setPosition(0, -item.getComponent(UITransform)!.height * (0.5 + i) - this.spacing * (i + 1));\n    \t\titem.getComponent(Item)!.initItem(i, i);\n            this.items.push(item);\n    \t}\n    }\n\n    getPositionInView (item: Node) { // get item position in scrollview's node space\n        let worldPos = item!.parent!.getComponent(UITransform)!.convertToWorldSpaceAR(item.position);\n        let viewPos = this.scrollview.node.getComponent(UITransform)!.convertToNodeSpaceAR(worldPos);\n        return viewPos;\n    }\n\n    update (dt: number) {\n        this.updateTimer += dt;\n        if (this.updateTimer < this.updateInterval) return; // we don't need to do the math every frame\n        this.updateTimer = 0;\n        let items = this.items;\n        let buffer = this.bufferZone;\n        let isDown = this.scrollview!.content!.getPosition().y < this.lastContentPosY; // scrolling direction\n        let offset = (this.itemTemplate.getComponent(UITransform)!.height + this.spacing) * items.length;\n        for (let i = 0; i < items.length; ++i) {\n            let viewPos = this.getPositionInView(items[i]);\n            if (isDown) {\n                // if away from buffer zone and not reaching top of content\n                if (viewPos.y < -buffer && items[i].getPosition().y + offset < 0) {\n                    let pos = items[i].getPosition();\n                    pos.y += offset;\n                    items[i].setPosition(pos);\n                    let item = items[i].getComponent(Item)!;\n                    let itemId = item.itemID - items.length; // update item id\n                    item.updateItem(itemId);\n                }\n            } else {\n                // if away from buffer zone and not reaching bottom of content\n                if (viewPos.y > buffer && items[i].getPosition().y - offset > -this.content.getComponent(UITransform)!.height) {\n                    let pos = items[i].getPosition();\n                    pos.y -= offset;\n                    items[i].setPosition(pos);\n                    let item = items[i].getComponent(Item)!;\n                    let itemId = item.itemID + items.length;\n                    item.updateItem(itemId);\n                }\n            }\n        }\n        // update lastContentPosY\n        this.lastContentPosY = this.scrollview.content!.getPosition().y;\n        this.lblTotalItems.string = \"Total Items: \" + this.totalCount;\n    }\n\n    scrollEvent (sender: any, event: any) {\n        switch(event) {\n            case 0: \n               this.lblScrollEvent.string = \"Scroll to Top\"; \n               break;\n            case 1: \n               this.lblScrollEvent.string = \"Scroll to Bottom\"; \n               break;\n            case 2: \n               this.lblScrollEvent.string = \"Scroll to Left\"; \n               break;\n            case 3: \n               this.lblScrollEvent.string = \"Scroll to Right\"; \n               break;\n            case 4: \n               this.lblScrollEvent.string = \"Scrolling\"; \n               break;\n            case 5: \n               this.lblScrollEvent.string = \"Bounce Top\"; \n               break;\n            case 6: \n               this.lblScrollEvent.string = \"Bounce bottom\"; \n               break;\n            case 7: \n               this.lblScrollEvent.string = \"Bounce left\"; \n               break;\n            case 8: \n               this.lblScrollEvent.string = \"Bounce right\"; \n               break;\n            case 9: \n               this.lblScrollEvent.string = \"Auto scroll ended\"; \n               break;\n        }\n    }\n\n    addItem () {\n        this.content.getComponent(UITransform)!.height = (this.totalCount + 1) * (this.itemTemplate.getComponent(UITransform)!.height + this.spacing) + this.spacing; // get total content height\n        this.totalCount = this.totalCount + 1;\n    }\n\n    removeItem () {\n        if (this.totalCount - 1 < 30) {\n            error(\"can't remove item less than 30!\");\n            return;\n        }\n\n        this.content.getComponent(UITransform)!.height = (this.totalCount - 1) * (this.itemTemplate.getComponent(UITransform)!.height + this.spacing) + this.spacing; // get total content height\n        this.totalCount = this.totalCount - 1;\n\n        this.moveBottomItemToTop();\n    }\n\n    moveBottomItemToTop () {\n        let offset = (this.itemTemplate.getComponent(UITransform)!.height + this.spacing) * this.items.length;\n        let length = this.items.length;\n        let item = this.getItemAtBottom();\n\n        // whether need to move to top\n        if (item.getPosition().y + offset < 0) {\n            let pos = item.getPosition();\n            pos.y += offset;\n            item.setPosition(pos);\n            let itemComp = item.getComponent(Item)!;\n            let itemId = itemComp.itemID - length;\n            itemComp.updateItem(itemId);\n        }\n    }\n\n    getItemAtBottom () {\n        let item = this.items[0];\n        for (let i = 1; i < this.items.length; ++i) {\n            if (item.getPosition().y > this.items[i].getPosition().y) {\n                item = this.items[i];\n            }\n        }\n        return item;\n    }\n\n    scrollToFixedPosition () {\n        this.scrollview.scrollToOffset(new Vec3(0, 500, 0), 2);\n    }\n}\n"]}